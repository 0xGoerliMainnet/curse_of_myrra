// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from messages.proto</summary>
public static partial class MessagesReflection {

  #region Descriptor
  /// <summary>File descriptor for messages.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MessagesReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg5tZXNzYWdlcy5wcm90byL+AgoJR2FtZUV2ZW50EhwKBHR5cGUYASABKA4y",
          "Di5HYW1lRXZlbnRUeXBlEhgKB3BsYXllcnMYAiADKAsyBy5QbGF5ZXISDwoH",
          "bGF0ZW5jeRgDIAEoBBIgCgtwcm9qZWN0aWxlcxgEIAMoCzILLlByb2plY3Rp",
          "bGUSGAoQcGxheWVyX2pvaW5lZF9pZBgFIAEoBBIeCg13aW5uZXJfcGxheWVy",
          "GAYgASgLMgcuUGxheWVyEj8KE3NlbGVjdGVkX2NoYXJhY3RlcnMYByADKAsy",
          "Ii5HYW1lRXZlbnQuU2VsZWN0ZWRDaGFyYWN0ZXJzRW50cnkSGAoQcGxheWVy",
          "X3RpbWVzdGFtcBgIIAEoAxIYChBzZXJ2ZXJfdGltZXN0YW1wGAkgASgDEhwK",
          "CGtpbGxmZWVkGAogAygLMgouS2lsbEV2ZW50GjkKF1NlbGVjdGVkQ2hhcmFj",
          "dGVyc0VudHJ5EgsKA2tleRgBIAEoBBINCgV2YWx1ZRgCIAEoCToCOAEiPAoP",
          "UGxheWVyQ2hhcmFjdGVyEhEKCXBsYXllcl9pZBgBIAEoBBIWCg5jaGFyYWN0",
          "ZXJfbmFtZRgCIAEoCSKfBAoGUGxheWVyEgoKAmlkGAEgASgEEg4KBmhlYWx0",
          "aBgCIAEoEhIbCghwb3NpdGlvbhgDIAEoCzIJLlBvc2l0aW9uEhcKBnN0YXR1",
          "cxgEIAEoDjIHLlN0YXR1cxIdCgZhY3Rpb24YBSABKA4yDS5QbGF5ZXJBY3Rp",
          "b24SHwoMYW9lX3Bvc2l0aW9uGAYgASgLMgkuUG9zaXRpb24SEgoKa2lsbF9j",
          "b3VudBgHIAEoBBITCgtkZWF0aF9jb3VudBgIIAEoBBIuChliYXNpY19za2ls",
          "bF9jb29sZG93bl9sZWZ0GAkgASgLMgsuTWlsbGlzVGltZRIqChVza2lsbF8x",
          "X2Nvb2xkb3duX2xlZnQYCiABKAsyCy5NaWxsaXNUaW1lEioKFXNraWxsXzJf",
          "Y29vbGRvd25fbGVmdBgLIAEoCzILLk1pbGxpc1RpbWUSKgoVc2tpbGxfM19j",
          "b29sZG93bl9sZWZ0GAwgASgLMgsuTWlsbGlzVGltZRIqChVza2lsbF80X2Nv",
          "b2xkb3duX2xlZnQYDSABKAsyCy5NaWxsaXNUaW1lEhYKDmNoYXJhY3Rlcl9u",
          "YW1lGA4gASgJEiUKB2VmZmVjdHMYDyADKAsyFC5QbGF5ZXIuRWZmZWN0c0Vu",
          "dHJ5GjsKDEVmZmVjdHNFbnRyeRILCgNrZXkYASABKAQSGgoFdmFsdWUYAiAB",
          "KAsyCy5NaWxsaXNUaW1lOgI4ASIuCglLaWxsRXZlbnQSEQoJa2lsbGVkX2J5",
          "GAEgASgEEg4KBmtpbGxlZBgCIAEoBCIgCghQb3NpdGlvbhIJCgF4GAEgASgE",
          "EgkKAXkYAiABKAQiKAoQUmVsYXRpdmVQb3NpdGlvbhIJCgF4GAEgASgCEgkK",
          "AXkYAiABKAIi4QEKDENsaWVudEFjdGlvbhIXCgZhY3Rpb24YASABKA4yBy5B",
          "Y3Rpb24SHQoJZGlyZWN0aW9uGAIgASgOMgouRGlyZWN0aW9uEiMKCHBvc2l0",
          "aW9uGAMgASgLMhEuUmVsYXRpdmVQb3NpdGlvbhIlCgptb3ZlX2RlbHRhGAQg",
          "ASgLMhEuUmVsYXRpdmVQb3NpdGlvbhIOCgZ0YXJnZXQYBSABKBISEQoJdGlt",
          "ZXN0YW1wGAYgASgDEioKEHBsYXllcl9jaGFyYWN0ZXIYByABKAsyEC5QbGF5",
          "ZXJDaGFyYWN0ZXIi5gEKCkxvYmJ5RXZlbnQSHQoEdHlwZRgBIAEoDjIPLkxv",
          "YmJ5RXZlbnRUeXBlEhAKCGxvYmJ5X2lkGAIgASgJEhEKCXBsYXllcl9pZBgD",
          "IAEoBBIXCg9hZGRlZF9wbGF5ZXJfaWQYBCABKAQSDwoHZ2FtZV9pZBgFIAEo",
          "CRIUCgxwbGF5ZXJfY291bnQYBiABKAQSDwoHcGxheWVycxgHIAMoBBIZChFy",
          "ZW1vdmVkX3BsYXllcl9pZBgIIAEoBBIoCgtnYW1lX2NvbmZpZxgJIAEoCzIT",
          "LlNlcnZlckdhbWVTZXR0aW5ncyJ8CgxSdW5uZXJDb25maWcSDAoETmFtZRgB",
          "IAEoCRITCgtib2FyZF93aWR0aBgCIAEoBBIUCgxib2FyZF9oZWlnaHQYAyAB",
          "KAQSGgoSc2VydmVyX3RpY2tyYXRlX21zGAQgASgEEhcKD2dhbWVfdGltZW91",
          "dF9tcxgFIAEoBCJhCgpHYW1lQ29uZmlnEh4KCmJvYXJkX3NpemUYASABKAsy",
          "Ci5Cb2FyZFNpemUSGgoSc2VydmVyX3RpY2tyYXRlX21zGAIgASgEEhcKD2dh",
          "bWVfdGltZW91dF9tcxgDIAEoBCIqCglCb2FyZFNpemUSDQoFd2lkdGgYASAB",
          "KAQSDgoGaGVpZ2h0GAIgASgEIu4BChNDaGFyYWN0ZXJDb25maWdJdGVtEgwK",
          "BE5hbWUYASABKAkSCgoCSWQYAiABKAkSDgoGQWN0aXZlGAMgASgJEg0KBUNs",
          "YXNzGAQgASgJEg8KB0ZhY3Rpb24YBSABKAkSEQoJQmFzZVNwZWVkGAYgASgJ",
          "EhIKClNraWxsQmFzaWMYByABKAkSFAoMU2tpbGxBY3RpdmUxGAggASgJEhQK",
          "DFNraWxsQWN0aXZlMhgJIAEoCRIRCglTa2lsbERhc2gYCiABKAkSFQoNU2tp",
          "bGxVbHRpbWF0ZRgLIAEoCRIQCghCb2R5U2l6ZRgMIAEoCSI2Cg9DaGFyYWN0",
          "ZXJDb25maWcSIwoFSXRlbXMYASADKAsyFC5DaGFyYWN0ZXJDb25maWdJdGVt",
          "Ii8KDFNraWxsc0NvbmZpZxIfCgVJdGVtcxgBIAMoCzIQLlNraWxsQ29uZmln",
          "SXRlbSKrAQoPU2tpbGxDb25maWdJdGVtEgwKBE5hbWUYASABKAkSDgoGRG9G",
          "dW5jGAIgASgJEhIKCkJ1dHRvblR5cGUYAyABKAkSEAoIQ29vbGRvd24YBCAB",
          "KAkSDgoGRGFtYWdlGAUgASgJEg4KBlN0YXR1cxgGIAEoCRIQCghEdXJhdGlv",
          "bhgHIAEoCRISCgpQcm9qZWN0aWxlGAggASgJEg4KBk1pbmlvbhgJIAEoCSKM",
          "AQoSU2VydmVyR2FtZVNldHRpbmdzEiQKDXJ1bm5lcl9jb25maWcYASABKAsy",
          "DS5SdW5uZXJDb25maWcSKgoQY2hhcmFjdGVyX2NvbmZpZxgCIAEoCzIQLkNo",
          "YXJhY3RlckNvbmZpZxIkCg1za2lsbHNfY29uZmlnGAMgASgLMg0uU2tpbGxz",
          "Q29uZmlnIrMCCgpQcm9qZWN0aWxlEgoKAmlkGAEgASgEEhsKCHBvc2l0aW9u",
          "GAIgASgLMgkuUG9zaXRpb24SJAoJZGlyZWN0aW9uGAMgASgLMhEuUmVsYXRp",
          "dmVQb3NpdGlvbhINCgVzcGVlZBgEIAEoDRINCgVyYW5nZRgFIAEoDRIRCglw",
          "bGF5ZXJfaWQYBiABKAQSDgoGZGFtYWdlGAcgASgNEhcKD3JlbWFpbmluZ190",
          "aWNrcxgIIAEoEhIoCg9wcm9qZWN0aWxlX3R5cGUYCSABKA4yDy5Qcm9qZWN0",
          "aWxlVHlwZRIhCgZzdGF0dXMYCiABKA4yES5Qcm9qZWN0aWxlU3RhdHVzEh8K",
          "F2xhc3RfYXR0YWNrZWRfcGxheWVyX2lkGAsgASgEEg4KBnBpZXJjZRgMIAEo",
          "CCInCgpNaWxsaXNUaW1lEgwKBGhpZ2gYASABKAQSCwoDbG93GAIgASgEKq4B",
          "Cg1HYW1lRXZlbnRUeXBlEhAKDFNUQVRFX1VQREFURRAAEg8KC1BJTkdfVVBE",
          "QVRFEAESEQoNUExBWUVSX0pPSU5FRBACEhEKDUdBTUVfRklOSVNIRUQQAxIV",
          "ChFJTklUSUFMX1BPU0lUSU9OUxAEEh0KGVNFTEVDVEVEX0NIQVJBQ1RFUl9V",
          "UERBVEUQBRIeChpGSU5JU0hfQ0hBUkFDVEVSX1NFTEVDVElPThAGKh0KBlN0",
          "YXR1cxIJCgVBTElWRRAAEggKBERFQUQQASqJAgoGQWN0aW9uEhYKEkFDVElP",
          "Tl9VTlNQRUNJRklFRBAAEggKBE1PVkUQARIKCgZBVFRBQ0sQAhIMCghURUxF",
          "UE9SVBAEEg4KCkFUVEFDS19BT0UQBRIWChJNT1ZFX1dJVEhfSk9ZU1RJQ0sQ",
          "BhILCgdBRERfQk9UEAcSDwoLQVVUT19BVFRBQ0sQCBIQCgxCQVNJQ19BVFRB",
          "Q0sQCRILCgdTS0lMTF8xEAoSCwoHU0tJTExfMhALEgsKB1NLSUxMXzMQDBIL",
          "CgdTS0lMTF80EA0SFAoQU0VMRUNUX0NIQVJBQ1RFUhAOEg8KC0VOQUJMRV9C",
          "T1RTEA8SEAoMRElTQUJMRV9CT1RTEBAqTQoJRGlyZWN0aW9uEhkKFURJUkVD",
          "VElPTl9VTlNQRUNJRklFRBAAEgYKAlVQEAESCAoERE9XThACEggKBExFRlQQ",
          "AxIJCgVSSUdIVBAEKqoBCgxQbGF5ZXJBY3Rpb24SCwoHTk9USElORxAAEg0K",
          "CUFUVEFDS0lORxABEhEKDUFUVEFDS0lOR19BT0UQAhIVChFFWEVDVVRJTkdf",
          "U0tJTExfMRADEg8KC1RFTEVQT1JUSU5HEAQSFQoRRVhFQ1VUSU5HX1NLSUxM",
          "XzIQBRIVChFFWEVDVVRJTkdfU0tJTExfMxAGEhUKEUVYRUNVVElOR19TS0lM",
          "TF80EAcqZAoMUGxheWVyRWZmZWN0Eg0KCVBFVFJJRklFRBAAEgwKCERJU0FS",
          "TUVEEAESDAoIUElFUkNJTkcQAhIJCgVSQUdFRBADEhEKDU5FT05fQ1JBU0hJ",
          "TkcQBBILCgdMRUFQSU5HEAUqjwEKDkxvYmJ5RXZlbnRUeXBlEhQKEFRZUEVf",
          "VU5TUEVDSUZJRUQQABINCglDT05ORUNURUQQARIQCgxQTEFZRVJfQURERUQQ",
          "AhIQCgxHQU1FX1NUQVJURUQQAxIQCgxQTEFZRVJfQ09VTlQQBBIOCgpTVEFS",
          "VF9HQU1FEAUSEgoOUExBWUVSX1JFTU9WRUQQBioyCg5Qcm9qZWN0aWxlVHlw",
          "ZRIKCgZCVUxMRVQQABIUChBESVNBUk1JTkdfQlVMTEVUEAEqLAoQUHJvamVj",
          "dGlsZVN0YXR1cxIKCgZBQ1RJVkUQABIMCghFWFBMT0RFRBABYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GameEventType), typeof(global::Status), typeof(global::Action), typeof(global::Direction), typeof(global::PlayerAction), typeof(global::PlayerEffect), typeof(global::LobbyEventType), typeof(global::ProjectileType), typeof(global::ProjectileStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent), global::GameEvent.Parser, new[]{ "Type", "Players", "Latency", "Projectiles", "PlayerJoinedId", "WinnerPlayer", "SelectedCharacters", "PlayerTimestamp", "ServerTimestamp", "Killfeed" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerCharacter), global::PlayerCharacter.Parser, new[]{ "PlayerId", "CharacterName" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Player), global::Player.Parser, new[]{ "Id", "Health", "Position", "Status", "Action", "AoePosition", "KillCount", "DeathCount", "BasicSkillCooldownLeft", "Skill1CooldownLeft", "Skill2CooldownLeft", "Skill3CooldownLeft", "Skill4CooldownLeft", "CharacterName", "Effects" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::KillEvent), global::KillEvent.Parser, new[]{ "KilledBy", "Killed" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Position), global::Position.Parser, new[]{ "X", "Y" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RelativePosition), global::RelativePosition.Parser, new[]{ "X", "Y" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientAction), global::ClientAction.Parser, new[]{ "Action", "Direction", "Position", "MoveDelta", "Target", "Timestamp", "PlayerCharacter" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LobbyEvent), global::LobbyEvent.Parser, new[]{ "Type", "LobbyId", "PlayerId", "AddedPlayerId", "GameId", "PlayerCount", "Players", "RemovedPlayerId", "GameConfig" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RunnerConfig), global::RunnerConfig.Parser, new[]{ "Name", "BoardWidth", "BoardHeight", "ServerTickrateMs", "GameTimeoutMs" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameConfig), global::GameConfig.Parser, new[]{ "BoardSize", "ServerTickrateMs", "GameTimeoutMs" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BoardSize), global::BoardSize.Parser, new[]{ "Width", "Height" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CharacterConfigItem), global::CharacterConfigItem.Parser, new[]{ "Name", "Id", "Active", "Class", "Faction", "BaseSpeed", "SkillBasic", "SkillActive1", "SkillActive2", "SkillDash", "SkillUltimate", "BodySize" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CharacterConfig), global::CharacterConfig.Parser, new[]{ "Items" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SkillsConfig), global::SkillsConfig.Parser, new[]{ "Items" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SkillConfigItem), global::SkillConfigItem.Parser, new[]{ "Name", "DoFunc", "ButtonType", "Cooldown", "Damage", "Status", "Duration", "Projectile", "Minion" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ServerGameSettings), global::ServerGameSettings.Parser, new[]{ "RunnerConfig", "CharacterConfig", "SkillsConfig" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Projectile), global::Projectile.Parser, new[]{ "Id", "Position", "Direction", "Speed", "Range", "PlayerId", "Damage", "RemainingTicks", "ProjectileType", "Status", "LastAttackedPlayerId", "Pierce" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MillisTime), global::MillisTime.Parser, new[]{ "High", "Low" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
/// <summary>
/// Type of game events
///- STATE_UPDATE: The game's state has been updated
///- PING_UPDATE: The player's current ping updated
///- PLAYER_JOINED: A player has joined the game
///- INITIAL_POSITIONS: The initial positions of each player
/// </summary>
public enum GameEventType {
  [pbr::OriginalName("STATE_UPDATE")] StateUpdate = 0,
  [pbr::OriginalName("PING_UPDATE")] PingUpdate = 1,
  [pbr::OriginalName("PLAYER_JOINED")] PlayerJoined = 2,
  [pbr::OriginalName("GAME_FINISHED")] GameFinished = 3,
  [pbr::OriginalName("INITIAL_POSITIONS")] InitialPositions = 4,
  [pbr::OriginalName("SELECTED_CHARACTER_UPDATE")] SelectedCharacterUpdate = 5,
  [pbr::OriginalName("FINISH_CHARACTER_SELECTION")] FinishCharacterSelection = 6,
}

/// <summary>
///
///Status of a player
/// </summary>
public enum Status {
  [pbr::OriginalName("ALIVE")] Alive = 0,
  [pbr::OriginalName("DEAD")] Dead = 1,
}

/// <summary>
/// Actions a client/player performs
///- MOVE: the player moves
///- ATTACK: player attacks
///- TELEPORT: the player instantly moves to a non-contiguous position
///- ATTACK_AOE:
///- MOVE_WITH_JOYSTICK:
///- ADD_BOT: Ask the server to add a bot player to the game
///- AUTO_ATTACK: Player attacks nearest oponent, if in range.
///- BASIC_ATTACK, SKILL_{1, 2, 3, 4}: Player skills.
///- ENABLE_BOTS: Bots are enabled (move, attack, etc)
///- DISABLE_BOTS: Bots are disabled (stand still)
/// </summary>
public enum Action {
  [pbr::OriginalName("ACTION_UNSPECIFIED")] Unspecified = 0,
  [pbr::OriginalName("MOVE")] Move = 1,
  [pbr::OriginalName("ATTACK")] Attack = 2,
  [pbr::OriginalName("TELEPORT")] Teleport = 4,
  [pbr::OriginalName("ATTACK_AOE")] AttackAoe = 5,
  [pbr::OriginalName("MOVE_WITH_JOYSTICK")] MoveWithJoystick = 6,
  [pbr::OriginalName("ADD_BOT")] AddBot = 7,
  [pbr::OriginalName("AUTO_ATTACK")] AutoAttack = 8,
  [pbr::OriginalName("BASIC_ATTACK")] BasicAttack = 9,
  [pbr::OriginalName("SKILL_1")] Skill1 = 10,
  [pbr::OriginalName("SKILL_2")] Skill2 = 11,
  [pbr::OriginalName("SKILL_3")] Skill3 = 12,
  [pbr::OriginalName("SKILL_4")] Skill4 = 13,
  [pbr::OriginalName("SELECT_CHARACTER")] SelectCharacter = 14,
  [pbr::OriginalName("ENABLE_BOTS")] EnableBots = 15,
  [pbr::OriginalName("DISABLE_BOTS")] DisableBots = 16,
}

/// <summary>
/// Directions an action can happen in
/// </summary>
public enum Direction {
  [pbr::OriginalName("DIRECTION_UNSPECIFIED")] Unspecified = 0,
  [pbr::OriginalName("UP")] Up = 1,
  [pbr::OriginalName("DOWN")] Down = 2,
  [pbr::OriginalName("LEFT")] Left = 3,
  [pbr::OriginalName("RIGHT")] Right = 4,
}

/// <summary>
/// Actions a player performs
///- NOTHING: nothing
///- ATTACKING: player is attacking
/// </summary>
public enum PlayerAction {
  [pbr::OriginalName("NOTHING")] Nothing = 0,
  [pbr::OriginalName("ATTACKING")] Attacking = 1,
  [pbr::OriginalName("ATTACKING_AOE")] AttackingAoe = 2,
  [pbr::OriginalName("EXECUTING_SKILL_1")] ExecutingSkill1 = 3,
  [pbr::OriginalName("TELEPORTING")] Teleporting = 4,
  [pbr::OriginalName("EXECUTING_SKILL_2")] ExecutingSkill2 = 5,
  [pbr::OriginalName("EXECUTING_SKILL_3")] ExecutingSkill3 = 6,
  [pbr::OriginalName("EXECUTING_SKILL_4")] ExecutingSkill4 = 7,
}

/// <summary>
/// Effects a player has 
/// </summary>
public enum PlayerEffect {
  [pbr::OriginalName("PETRIFIED")] Petrified = 0,
  [pbr::OriginalName("DISARMED")] Disarmed = 1,
  [pbr::OriginalName("PIERCING")] Piercing = 2,
  [pbr::OriginalName("RAGED")] Raged = 3,
  [pbr::OriginalName("NEON_CRASHING")] NeonCrashing = 4,
  [pbr::OriginalName("LEAPING")] Leaping = 5,
}

/// <summary>
/// Type of lobby events
///- CONNECTED: Websocket connection is established
///- PLAYER_ADDED: A player has joined the matchmaking lobby
///- GAME_STARTED: A game session has started from this lobby
///- PLAYER_COUNT: Current player count in the lobby
///- PLAYER_REMOVED: A player has left the matchmaking lobby
/// </summary>
public enum LobbyEventType {
  [pbr::OriginalName("TYPE_UNSPECIFIED")] TypeUnspecified = 0,
  [pbr::OriginalName("CONNECTED")] Connected = 1,
  [pbr::OriginalName("PLAYER_ADDED")] PlayerAdded = 2,
  [pbr::OriginalName("GAME_STARTED")] GameStarted = 3,
  [pbr::OriginalName("PLAYER_COUNT")] PlayerCount = 4,
  [pbr::OriginalName("START_GAME")] StartGame = 5,
  [pbr::OriginalName("PLAYER_REMOVED")] PlayerRemoved = 6,
}

/// <summary>
/// Type of projectiles
///- BULLET: Single little bullet
/// </summary>
public enum ProjectileType {
  [pbr::OriginalName("BULLET")] Bullet = 0,
  [pbr::OriginalName("DISARMING_BULLET")] DisarmingBullet = 1,
}

/// <summary>
/// Status of projectiles
///- ACTIVE: Active projectile
///- EXPLODED: Exploded projectile
/// </summary>
public enum ProjectileStatus {
  [pbr::OriginalName("ACTIVE")] Active = 0,
  [pbr::OriginalName("EXPLODED")] Exploded = 1,
}

#endregion

#region Messages
/// <summary>
/// Represents the events pushed by the server during a game
///- type: type of the event
///- players: player list, used on STATE_UPDATE
///- ping_update: updated player's ping, used on PING_UPDATE
///- projectiles: projectile list, used on STATE_UPDATE
///- player_joined_id: ID of the player that joined the game
/// </summary>
public sealed partial class GameEvent : pb::IMessage<GameEvent>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<GameEvent> _parser = new pb::MessageParser<GameEvent>(() => new GameEvent());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<GameEvent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameEvent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameEvent(GameEvent other) : this() {
    type_ = other.type_;
    players_ = other.players_.Clone();
    latency_ = other.latency_;
    projectiles_ = other.projectiles_.Clone();
    playerJoinedId_ = other.playerJoinedId_;
    winnerPlayer_ = other.winnerPlayer_ != null ? other.winnerPlayer_.Clone() : null;
    selectedCharacters_ = other.selectedCharacters_.Clone();
    playerTimestamp_ = other.playerTimestamp_;
    serverTimestamp_ = other.serverTimestamp_;
    killfeed_ = other.killfeed_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameEvent Clone() {
    return new GameEvent(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::GameEventType type_ = global::GameEventType.StateUpdate;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEventType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "players" field.</summary>
  public const int PlayersFieldNumber = 2;
  private static readonly pb::FieldCodec<global::Player> _repeated_players_codec
      = pb::FieldCodec.ForMessage(18, global::Player.Parser);
  private readonly pbc::RepeatedField<global::Player> players_ = new pbc::RepeatedField<global::Player>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::Player> Players {
    get { return players_; }
  }

  /// <summary>Field number for the "latency" field.</summary>
  public const int LatencyFieldNumber = 3;
  private ulong latency_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Latency {
    get { return latency_; }
    set {
      latency_ = value;
    }
  }

  /// <summary>Field number for the "projectiles" field.</summary>
  public const int ProjectilesFieldNumber = 4;
  private static readonly pb::FieldCodec<global::Projectile> _repeated_projectiles_codec
      = pb::FieldCodec.ForMessage(34, global::Projectile.Parser);
  private readonly pbc::RepeatedField<global::Projectile> projectiles_ = new pbc::RepeatedField<global::Projectile>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::Projectile> Projectiles {
    get { return projectiles_; }
  }

  /// <summary>Field number for the "player_joined_id" field.</summary>
  public const int PlayerJoinedIdFieldNumber = 5;
  private ulong playerJoinedId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong PlayerJoinedId {
    get { return playerJoinedId_; }
    set {
      playerJoinedId_ = value;
    }
  }

  /// <summary>Field number for the "winner_player" field.</summary>
  public const int WinnerPlayerFieldNumber = 6;
  private global::Player winnerPlayer_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Player WinnerPlayer {
    get { return winnerPlayer_; }
    set {
      winnerPlayer_ = value;
    }
  }

  /// <summary>Field number for the "selected_characters" field.</summary>
  public const int SelectedCharactersFieldNumber = 7;
  private static readonly pbc::MapField<ulong, string>.Codec _map_selectedCharacters_codec
      = new pbc::MapField<ulong, string>.Codec(pb::FieldCodec.ForUInt64(8, 0UL), pb::FieldCodec.ForString(18, ""), 58);
  private readonly pbc::MapField<ulong, string> selectedCharacters_ = new pbc::MapField<ulong, string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::MapField<ulong, string> SelectedCharacters {
    get { return selectedCharacters_; }
  }

  /// <summary>Field number for the "player_timestamp" field.</summary>
  public const int PlayerTimestampFieldNumber = 8;
  private long playerTimestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long PlayerTimestamp {
    get { return playerTimestamp_; }
    set {
      playerTimestamp_ = value;
    }
  }

  /// <summary>Field number for the "server_timestamp" field.</summary>
  public const int ServerTimestampFieldNumber = 9;
  private long serverTimestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long ServerTimestamp {
    get { return serverTimestamp_; }
    set {
      serverTimestamp_ = value;
    }
  }

  /// <summary>Field number for the "killfeed" field.</summary>
  public const int KillfeedFieldNumber = 10;
  private static readonly pb::FieldCodec<global::KillEvent> _repeated_killfeed_codec
      = pb::FieldCodec.ForMessage(82, global::KillEvent.Parser);
  private readonly pbc::RepeatedField<global::KillEvent> killfeed_ = new pbc::RepeatedField<global::KillEvent>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::KillEvent> Killfeed {
    get { return killfeed_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as GameEvent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(GameEvent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if(!players_.Equals(other.players_)) return false;
    if (Latency != other.Latency) return false;
    if(!projectiles_.Equals(other.projectiles_)) return false;
    if (PlayerJoinedId != other.PlayerJoinedId) return false;
    if (!object.Equals(WinnerPlayer, other.WinnerPlayer)) return false;
    if (!SelectedCharacters.Equals(other.SelectedCharacters)) return false;
    if (PlayerTimestamp != other.PlayerTimestamp) return false;
    if (ServerTimestamp != other.ServerTimestamp) return false;
    if(!killfeed_.Equals(other.killfeed_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != global::GameEventType.StateUpdate) hash ^= Type.GetHashCode();
    hash ^= players_.GetHashCode();
    if (Latency != 0UL) hash ^= Latency.GetHashCode();
    hash ^= projectiles_.GetHashCode();
    if (PlayerJoinedId != 0UL) hash ^= PlayerJoinedId.GetHashCode();
    if (winnerPlayer_ != null) hash ^= WinnerPlayer.GetHashCode();
    hash ^= SelectedCharacters.GetHashCode();
    if (PlayerTimestamp != 0L) hash ^= PlayerTimestamp.GetHashCode();
    if (ServerTimestamp != 0L) hash ^= ServerTimestamp.GetHashCode();
    hash ^= killfeed_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Type != global::GameEventType.StateUpdate) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    players_.WriteTo(output, _repeated_players_codec);
    if (Latency != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(Latency);
    }
    projectiles_.WriteTo(output, _repeated_projectiles_codec);
    if (PlayerJoinedId != 0UL) {
      output.WriteRawTag(40);
      output.WriteUInt64(PlayerJoinedId);
    }
    if (winnerPlayer_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(WinnerPlayer);
    }
    selectedCharacters_.WriteTo(output, _map_selectedCharacters_codec);
    if (PlayerTimestamp != 0L) {
      output.WriteRawTag(64);
      output.WriteInt64(PlayerTimestamp);
    }
    if (ServerTimestamp != 0L) {
      output.WriteRawTag(72);
      output.WriteInt64(ServerTimestamp);
    }
    killfeed_.WriteTo(output, _repeated_killfeed_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Type != global::GameEventType.StateUpdate) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    players_.WriteTo(ref output, _repeated_players_codec);
    if (Latency != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(Latency);
    }
    projectiles_.WriteTo(ref output, _repeated_projectiles_codec);
    if (PlayerJoinedId != 0UL) {
      output.WriteRawTag(40);
      output.WriteUInt64(PlayerJoinedId);
    }
    if (winnerPlayer_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(WinnerPlayer);
    }
    selectedCharacters_.WriteTo(ref output, _map_selectedCharacters_codec);
    if (PlayerTimestamp != 0L) {
      output.WriteRawTag(64);
      output.WriteInt64(PlayerTimestamp);
    }
    if (ServerTimestamp != 0L) {
      output.WriteRawTag(72);
      output.WriteInt64(ServerTimestamp);
    }
    killfeed_.WriteTo(ref output, _repeated_killfeed_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Type != global::GameEventType.StateUpdate) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    size += players_.CalculateSize(_repeated_players_codec);
    if (Latency != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Latency);
    }
    size += projectiles_.CalculateSize(_repeated_projectiles_codec);
    if (PlayerJoinedId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerJoinedId);
    }
    if (winnerPlayer_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(WinnerPlayer);
    }
    size += selectedCharacters_.CalculateSize(_map_selectedCharacters_codec);
    if (PlayerTimestamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerTimestamp);
    }
    if (ServerTimestamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerTimestamp);
    }
    size += killfeed_.CalculateSize(_repeated_killfeed_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(GameEvent other) {
    if (other == null) {
      return;
    }
    if (other.Type != global::GameEventType.StateUpdate) {
      Type = other.Type;
    }
    players_.Add(other.players_);
    if (other.Latency != 0UL) {
      Latency = other.Latency;
    }
    projectiles_.Add(other.projectiles_);
    if (other.PlayerJoinedId != 0UL) {
      PlayerJoinedId = other.PlayerJoinedId;
    }
    if (other.winnerPlayer_ != null) {
      if (winnerPlayer_ == null) {
        WinnerPlayer = new global::Player();
      }
      WinnerPlayer.MergeFrom(other.WinnerPlayer);
    }
    selectedCharacters_.Add(other.selectedCharacters_);
    if (other.PlayerTimestamp != 0L) {
      PlayerTimestamp = other.PlayerTimestamp;
    }
    if (other.ServerTimestamp != 0L) {
      ServerTimestamp = other.ServerTimestamp;
    }
    killfeed_.Add(other.killfeed_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Type = (global::GameEventType) input.ReadEnum();
          break;
        }
        case 18: {
          players_.AddEntriesFrom(input, _repeated_players_codec);
          break;
        }
        case 24: {
          Latency = input.ReadUInt64();
          break;
        }
        case 34: {
          projectiles_.AddEntriesFrom(input, _repeated_projectiles_codec);
          break;
        }
        case 40: {
          PlayerJoinedId = input.ReadUInt64();
          break;
        }
        case 50: {
          if (winnerPlayer_ == null) {
            WinnerPlayer = new global::Player();
          }
          input.ReadMessage(WinnerPlayer);
          break;
        }
        case 58: {
          selectedCharacters_.AddEntriesFrom(input, _map_selectedCharacters_codec);
          break;
        }
        case 64: {
          PlayerTimestamp = input.ReadInt64();
          break;
        }
        case 72: {
          ServerTimestamp = input.ReadInt64();
          break;
        }
        case 82: {
          killfeed_.AddEntriesFrom(input, _repeated_killfeed_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Type = (global::GameEventType) input.ReadEnum();
          break;
        }
        case 18: {
          players_.AddEntriesFrom(ref input, _repeated_players_codec);
          break;
        }
        case 24: {
          Latency = input.ReadUInt64();
          break;
        }
        case 34: {
          projectiles_.AddEntriesFrom(ref input, _repeated_projectiles_codec);
          break;
        }
        case 40: {
          PlayerJoinedId = input.ReadUInt64();
          break;
        }
        case 50: {
          if (winnerPlayer_ == null) {
            WinnerPlayer = new global::Player();
          }
          input.ReadMessage(WinnerPlayer);
          break;
        }
        case 58: {
          selectedCharacters_.AddEntriesFrom(ref input, _map_selectedCharacters_codec);
          break;
        }
        case 64: {
          PlayerTimestamp = input.ReadInt64();
          break;
        }
        case 72: {
          ServerTimestamp = input.ReadInt64();
          break;
        }
        case 82: {
          killfeed_.AddEntriesFrom(ref input, _repeated_killfeed_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerCharacter : pb::IMessage<PlayerCharacter>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerCharacter> _parser = new pb::MessageParser<PlayerCharacter>(() => new PlayerCharacter());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<PlayerCharacter> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerCharacter() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerCharacter(PlayerCharacter other) : this() {
    playerId_ = other.playerId_;
    characterName_ = other.characterName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerCharacter Clone() {
    return new PlayerCharacter(this);
  }

  /// <summary>Field number for the "player_id" field.</summary>
  public const int PlayerIdFieldNumber = 1;
  private ulong playerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong PlayerId {
    get { return playerId_; }
    set {
      playerId_ = value;
    }
  }

  /// <summary>Field number for the "character_name" field.</summary>
  public const int CharacterNameFieldNumber = 2;
  private string characterName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string CharacterName {
    get { return characterName_; }
    set {
      characterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as PlayerCharacter);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(PlayerCharacter other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PlayerId != other.PlayerId) return false;
    if (CharacterName != other.CharacterName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (PlayerId != 0UL) hash ^= PlayerId.GetHashCode();
    if (CharacterName.Length != 0) hash ^= CharacterName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (PlayerId != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(PlayerId);
    }
    if (CharacterName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CharacterName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (PlayerId != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(PlayerId);
    }
    if (CharacterName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CharacterName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (PlayerId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerId);
    }
    if (CharacterName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(PlayerCharacter other) {
    if (other == null) {
      return;
    }
    if (other.PlayerId != 0UL) {
      PlayerId = other.PlayerId;
    }
    if (other.CharacterName.Length != 0) {
      CharacterName = other.CharacterName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PlayerId = input.ReadUInt64();
          break;
        }
        case 18: {
          CharacterName = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          PlayerId = input.ReadUInt64();
          break;
        }
        case 18: {
          CharacterName = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Information about a player
///- id: ID of the player, this ID is the identifier in the game session, the game object tied to it
///- health: Current health of the player
///- position: Position of the player in the server game grid (see Position for more info)
///- power: [Amin 2023-05-05:  not sure what this is, was copied from struct like this]
///- action: [Manu 2023-05-12: accion to renderize on client side]
///- status: currently if alive or dead
///- aoe_position: Position of the aoe attack, only used when action == ATTACKING_AOE
///- {basic, first, second, third, fourth}_cooldown_left: Time remaining in seconds until the cooldown is over.
///- character_name: Name of the player's character
/// </summary>
public sealed partial class Player : pb::IMessage<Player>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Player> _parser = new pb::MessageParser<Player>(() => new Player());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Player> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Player() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Player(Player other) : this() {
    id_ = other.id_;
    health_ = other.health_;
    position_ = other.position_ != null ? other.position_.Clone() : null;
    status_ = other.status_;
    action_ = other.action_;
    aoePosition_ = other.aoePosition_ != null ? other.aoePosition_.Clone() : null;
    killCount_ = other.killCount_;
    deathCount_ = other.deathCount_;
    basicSkillCooldownLeft_ = other.basicSkillCooldownLeft_ != null ? other.basicSkillCooldownLeft_.Clone() : null;
    skill1CooldownLeft_ = other.skill1CooldownLeft_ != null ? other.skill1CooldownLeft_.Clone() : null;
    skill2CooldownLeft_ = other.skill2CooldownLeft_ != null ? other.skill2CooldownLeft_.Clone() : null;
    skill3CooldownLeft_ = other.skill3CooldownLeft_ != null ? other.skill3CooldownLeft_.Clone() : null;
    skill4CooldownLeft_ = other.skill4CooldownLeft_ != null ? other.skill4CooldownLeft_.Clone() : null;
    characterName_ = other.characterName_;
    effects_ = other.effects_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Player Clone() {
    return new Player(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private ulong id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "health" field.</summary>
  public const int HealthFieldNumber = 2;
  private long health_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long Health {
    get { return health_; }
    set {
      health_ = value;
    }
  }

  /// <summary>Field number for the "position" field.</summary>
  public const int PositionFieldNumber = 3;
  private global::Position position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Position Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 4;
  private global::Status status_ = global::Status.Alive;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Status Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "action" field.</summary>
  public const int ActionFieldNumber = 5;
  private global::PlayerAction action_ = global::PlayerAction.Nothing;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PlayerAction Action {
    get { return action_; }
    set {
      action_ = value;
    }
  }

  /// <summary>Field number for the "aoe_position" field.</summary>
  public const int AoePositionFieldNumber = 6;
  private global::Position aoePosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Position AoePosition {
    get { return aoePosition_; }
    set {
      aoePosition_ = value;
    }
  }

  /// <summary>Field number for the "kill_count" field.</summary>
  public const int KillCountFieldNumber = 7;
  private ulong killCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong KillCount {
    get { return killCount_; }
    set {
      killCount_ = value;
    }
  }

  /// <summary>Field number for the "death_count" field.</summary>
  public const int DeathCountFieldNumber = 8;
  private ulong deathCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong DeathCount {
    get { return deathCount_; }
    set {
      deathCount_ = value;
    }
  }

  /// <summary>Field number for the "basic_skill_cooldown_left" field.</summary>
  public const int BasicSkillCooldownLeftFieldNumber = 9;
  private global::MillisTime basicSkillCooldownLeft_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::MillisTime BasicSkillCooldownLeft {
    get { return basicSkillCooldownLeft_; }
    set {
      basicSkillCooldownLeft_ = value;
    }
  }

  /// <summary>Field number for the "skill_1_cooldown_left" field.</summary>
  public const int Skill1CooldownLeftFieldNumber = 10;
  private global::MillisTime skill1CooldownLeft_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::MillisTime Skill1CooldownLeft {
    get { return skill1CooldownLeft_; }
    set {
      skill1CooldownLeft_ = value;
    }
  }

  /// <summary>Field number for the "skill_2_cooldown_left" field.</summary>
  public const int Skill2CooldownLeftFieldNumber = 11;
  private global::MillisTime skill2CooldownLeft_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::MillisTime Skill2CooldownLeft {
    get { return skill2CooldownLeft_; }
    set {
      skill2CooldownLeft_ = value;
    }
  }

  /// <summary>Field number for the "skill_3_cooldown_left" field.</summary>
  public const int Skill3CooldownLeftFieldNumber = 12;
  private global::MillisTime skill3CooldownLeft_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::MillisTime Skill3CooldownLeft {
    get { return skill3CooldownLeft_; }
    set {
      skill3CooldownLeft_ = value;
    }
  }

  /// <summary>Field number for the "skill_4_cooldown_left" field.</summary>
  public const int Skill4CooldownLeftFieldNumber = 13;
  private global::MillisTime skill4CooldownLeft_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::MillisTime Skill4CooldownLeft {
    get { return skill4CooldownLeft_; }
    set {
      skill4CooldownLeft_ = value;
    }
  }

  /// <summary>Field number for the "character_name" field.</summary>
  public const int CharacterNameFieldNumber = 14;
  private string characterName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string CharacterName {
    get { return characterName_; }
    set {
      characterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "effects" field.</summary>
  public const int EffectsFieldNumber = 15;
  private static readonly pbc::MapField<ulong, global::MillisTime>.Codec _map_effects_codec
      = new pbc::MapField<ulong, global::MillisTime>.Codec(pb::FieldCodec.ForUInt64(8, 0UL), pb::FieldCodec.ForMessage(18, global::MillisTime.Parser), 122);
  private readonly pbc::MapField<ulong, global::MillisTime> effects_ = new pbc::MapField<ulong, global::MillisTime>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::MapField<ulong, global::MillisTime> Effects {
    get { return effects_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Player);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Player other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Health != other.Health) return false;
    if (!object.Equals(Position, other.Position)) return false;
    if (Status != other.Status) return false;
    if (Action != other.Action) return false;
    if (!object.Equals(AoePosition, other.AoePosition)) return false;
    if (KillCount != other.KillCount) return false;
    if (DeathCount != other.DeathCount) return false;
    if (!object.Equals(BasicSkillCooldownLeft, other.BasicSkillCooldownLeft)) return false;
    if (!object.Equals(Skill1CooldownLeft, other.Skill1CooldownLeft)) return false;
    if (!object.Equals(Skill2CooldownLeft, other.Skill2CooldownLeft)) return false;
    if (!object.Equals(Skill3CooldownLeft, other.Skill3CooldownLeft)) return false;
    if (!object.Equals(Skill4CooldownLeft, other.Skill4CooldownLeft)) return false;
    if (CharacterName != other.CharacterName) return false;
    if (!Effects.Equals(other.Effects)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0UL) hash ^= Id.GetHashCode();
    if (Health != 0L) hash ^= Health.GetHashCode();
    if (position_ != null) hash ^= Position.GetHashCode();
    if (Status != global::Status.Alive) hash ^= Status.GetHashCode();
    if (Action != global::PlayerAction.Nothing) hash ^= Action.GetHashCode();
    if (aoePosition_ != null) hash ^= AoePosition.GetHashCode();
    if (KillCount != 0UL) hash ^= KillCount.GetHashCode();
    if (DeathCount != 0UL) hash ^= DeathCount.GetHashCode();
    if (basicSkillCooldownLeft_ != null) hash ^= BasicSkillCooldownLeft.GetHashCode();
    if (skill1CooldownLeft_ != null) hash ^= Skill1CooldownLeft.GetHashCode();
    if (skill2CooldownLeft_ != null) hash ^= Skill2CooldownLeft.GetHashCode();
    if (skill3CooldownLeft_ != null) hash ^= Skill3CooldownLeft.GetHashCode();
    if (skill4CooldownLeft_ != null) hash ^= Skill4CooldownLeft.GetHashCode();
    if (CharacterName.Length != 0) hash ^= CharacterName.GetHashCode();
    hash ^= Effects.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Id != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(Id);
    }
    if (Health != 0L) {
      output.WriteRawTag(16);
      output.WriteSInt64(Health);
    }
    if (position_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Position);
    }
    if (Status != global::Status.Alive) {
      output.WriteRawTag(32);
      output.WriteEnum((int) Status);
    }
    if (Action != global::PlayerAction.Nothing) {
      output.WriteRawTag(40);
      output.WriteEnum((int) Action);
    }
    if (aoePosition_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(AoePosition);
    }
    if (KillCount != 0UL) {
      output.WriteRawTag(56);
      output.WriteUInt64(KillCount);
    }
    if (DeathCount != 0UL) {
      output.WriteRawTag(64);
      output.WriteUInt64(DeathCount);
    }
    if (basicSkillCooldownLeft_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(BasicSkillCooldownLeft);
    }
    if (skill1CooldownLeft_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(Skill1CooldownLeft);
    }
    if (skill2CooldownLeft_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(Skill2CooldownLeft);
    }
    if (skill3CooldownLeft_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(Skill3CooldownLeft);
    }
    if (skill4CooldownLeft_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(Skill4CooldownLeft);
    }
    if (CharacterName.Length != 0) {
      output.WriteRawTag(114);
      output.WriteString(CharacterName);
    }
    effects_.WriteTo(output, _map_effects_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Id != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(Id);
    }
    if (Health != 0L) {
      output.WriteRawTag(16);
      output.WriteSInt64(Health);
    }
    if (position_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Position);
    }
    if (Status != global::Status.Alive) {
      output.WriteRawTag(32);
      output.WriteEnum((int) Status);
    }
    if (Action != global::PlayerAction.Nothing) {
      output.WriteRawTag(40);
      output.WriteEnum((int) Action);
    }
    if (aoePosition_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(AoePosition);
    }
    if (KillCount != 0UL) {
      output.WriteRawTag(56);
      output.WriteUInt64(KillCount);
    }
    if (DeathCount != 0UL) {
      output.WriteRawTag(64);
      output.WriteUInt64(DeathCount);
    }
    if (basicSkillCooldownLeft_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(BasicSkillCooldownLeft);
    }
    if (skill1CooldownLeft_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(Skill1CooldownLeft);
    }
    if (skill2CooldownLeft_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(Skill2CooldownLeft);
    }
    if (skill3CooldownLeft_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(Skill3CooldownLeft);
    }
    if (skill4CooldownLeft_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(Skill4CooldownLeft);
    }
    if (CharacterName.Length != 0) {
      output.WriteRawTag(114);
      output.WriteString(CharacterName);
    }
    effects_.WriteTo(ref output, _map_effects_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
    }
    if (Health != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Health);
    }
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (Status != global::Status.Alive) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    if (Action != global::PlayerAction.Nothing) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
    }
    if (aoePosition_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AoePosition);
    }
    if (KillCount != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(KillCount);
    }
    if (DeathCount != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DeathCount);
    }
    if (basicSkillCooldownLeft_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicSkillCooldownLeft);
    }
    if (skill1CooldownLeft_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Skill1CooldownLeft);
    }
    if (skill2CooldownLeft_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Skill2CooldownLeft);
    }
    if (skill3CooldownLeft_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Skill3CooldownLeft);
    }
    if (skill4CooldownLeft_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Skill4CooldownLeft);
    }
    if (CharacterName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterName);
    }
    size += effects_.CalculateSize(_map_effects_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Player other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0UL) {
      Id = other.Id;
    }
    if (other.Health != 0L) {
      Health = other.Health;
    }
    if (other.position_ != null) {
      if (position_ == null) {
        Position = new global::Position();
      }
      Position.MergeFrom(other.Position);
    }
    if (other.Status != global::Status.Alive) {
      Status = other.Status;
    }
    if (other.Action != global::PlayerAction.Nothing) {
      Action = other.Action;
    }
    if (other.aoePosition_ != null) {
      if (aoePosition_ == null) {
        AoePosition = new global::Position();
      }
      AoePosition.MergeFrom(other.AoePosition);
    }
    if (other.KillCount != 0UL) {
      KillCount = other.KillCount;
    }
    if (other.DeathCount != 0UL) {
      DeathCount = other.DeathCount;
    }
    if (other.basicSkillCooldownLeft_ != null) {
      if (basicSkillCooldownLeft_ == null) {
        BasicSkillCooldownLeft = new global::MillisTime();
      }
      BasicSkillCooldownLeft.MergeFrom(other.BasicSkillCooldownLeft);
    }
    if (other.skill1CooldownLeft_ != null) {
      if (skill1CooldownLeft_ == null) {
        Skill1CooldownLeft = new global::MillisTime();
      }
      Skill1CooldownLeft.MergeFrom(other.Skill1CooldownLeft);
    }
    if (other.skill2CooldownLeft_ != null) {
      if (skill2CooldownLeft_ == null) {
        Skill2CooldownLeft = new global::MillisTime();
      }
      Skill2CooldownLeft.MergeFrom(other.Skill2CooldownLeft);
    }
    if (other.skill3CooldownLeft_ != null) {
      if (skill3CooldownLeft_ == null) {
        Skill3CooldownLeft = new global::MillisTime();
      }
      Skill3CooldownLeft.MergeFrom(other.Skill3CooldownLeft);
    }
    if (other.skill4CooldownLeft_ != null) {
      if (skill4CooldownLeft_ == null) {
        Skill4CooldownLeft = new global::MillisTime();
      }
      Skill4CooldownLeft.MergeFrom(other.Skill4CooldownLeft);
    }
    if (other.CharacterName.Length != 0) {
      CharacterName = other.CharacterName;
    }
    effects_.Add(other.effects_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadUInt64();
          break;
        }
        case 16: {
          Health = input.ReadSInt64();
          break;
        }
        case 26: {
          if (position_ == null) {
            Position = new global::Position();
          }
          input.ReadMessage(Position);
          break;
        }
        case 32: {
          Status = (global::Status) input.ReadEnum();
          break;
        }
        case 40: {
          Action = (global::PlayerAction) input.ReadEnum();
          break;
        }
        case 50: {
          if (aoePosition_ == null) {
            AoePosition = new global::Position();
          }
          input.ReadMessage(AoePosition);
          break;
        }
        case 56: {
          KillCount = input.ReadUInt64();
          break;
        }
        case 64: {
          DeathCount = input.ReadUInt64();
          break;
        }
        case 74: {
          if (basicSkillCooldownLeft_ == null) {
            BasicSkillCooldownLeft = new global::MillisTime();
          }
          input.ReadMessage(BasicSkillCooldownLeft);
          break;
        }
        case 82: {
          if (skill1CooldownLeft_ == null) {
            Skill1CooldownLeft = new global::MillisTime();
          }
          input.ReadMessage(Skill1CooldownLeft);
          break;
        }
        case 90: {
          if (skill2CooldownLeft_ == null) {
            Skill2CooldownLeft = new global::MillisTime();
          }
          input.ReadMessage(Skill2CooldownLeft);
          break;
        }
        case 98: {
          if (skill3CooldownLeft_ == null) {
            Skill3CooldownLeft = new global::MillisTime();
          }
          input.ReadMessage(Skill3CooldownLeft);
          break;
        }
        case 106: {
          if (skill4CooldownLeft_ == null) {
            Skill4CooldownLeft = new global::MillisTime();
          }
          input.ReadMessage(Skill4CooldownLeft);
          break;
        }
        case 114: {
          CharacterName = input.ReadString();
          break;
        }
        case 122: {
          effects_.AddEntriesFrom(input, _map_effects_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Id = input.ReadUInt64();
          break;
        }
        case 16: {
          Health = input.ReadSInt64();
          break;
        }
        case 26: {
          if (position_ == null) {
            Position = new global::Position();
          }
          input.ReadMessage(Position);
          break;
        }
        case 32: {
          Status = (global::Status) input.ReadEnum();
          break;
        }
        case 40: {
          Action = (global::PlayerAction) input.ReadEnum();
          break;
        }
        case 50: {
          if (aoePosition_ == null) {
            AoePosition = new global::Position();
          }
          input.ReadMessage(AoePosition);
          break;
        }
        case 56: {
          KillCount = input.ReadUInt64();
          break;
        }
        case 64: {
          DeathCount = input.ReadUInt64();
          break;
        }
        case 74: {
          if (basicSkillCooldownLeft_ == null) {
            BasicSkillCooldownLeft = new global::MillisTime();
          }
          input.ReadMessage(BasicSkillCooldownLeft);
          break;
        }
        case 82: {
          if (skill1CooldownLeft_ == null) {
            Skill1CooldownLeft = new global::MillisTime();
          }
          input.ReadMessage(Skill1CooldownLeft);
          break;
        }
        case 90: {
          if (skill2CooldownLeft_ == null) {
            Skill2CooldownLeft = new global::MillisTime();
          }
          input.ReadMessage(Skill2CooldownLeft);
          break;
        }
        case 98: {
          if (skill3CooldownLeft_ == null) {
            Skill3CooldownLeft = new global::MillisTime();
          }
          input.ReadMessage(Skill3CooldownLeft);
          break;
        }
        case 106: {
          if (skill4CooldownLeft_ == null) {
            Skill4CooldownLeft = new global::MillisTime();
          }
          input.ReadMessage(Skill4CooldownLeft);
          break;
        }
        case 114: {
          CharacterName = input.ReadString();
          break;
        }
        case 122: {
          effects_.AddEntriesFrom(ref input, _map_effects_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class KillEvent : pb::IMessage<KillEvent>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<KillEvent> _parser = new pb::MessageParser<KillEvent>(() => new KillEvent());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<KillEvent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public KillEvent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public KillEvent(KillEvent other) : this() {
    killedBy_ = other.killedBy_;
    killed_ = other.killed_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public KillEvent Clone() {
    return new KillEvent(this);
  }

  /// <summary>Field number for the "killed_by" field.</summary>
  public const int KilledByFieldNumber = 1;
  private ulong killedBy_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong KilledBy {
    get { return killedBy_; }
    set {
      killedBy_ = value;
    }
  }

  /// <summary>Field number for the "killed" field.</summary>
  public const int KilledFieldNumber = 2;
  private ulong killed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Killed {
    get { return killed_; }
    set {
      killed_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as KillEvent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(KillEvent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (KilledBy != other.KilledBy) return false;
    if (Killed != other.Killed) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (KilledBy != 0UL) hash ^= KilledBy.GetHashCode();
    if (Killed != 0UL) hash ^= Killed.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (KilledBy != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(KilledBy);
    }
    if (Killed != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Killed);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (KilledBy != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(KilledBy);
    }
    if (Killed != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Killed);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (KilledBy != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(KilledBy);
    }
    if (Killed != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Killed);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(KillEvent other) {
    if (other == null) {
      return;
    }
    if (other.KilledBy != 0UL) {
      KilledBy = other.KilledBy;
    }
    if (other.Killed != 0UL) {
      Killed = other.Killed;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          KilledBy = input.ReadUInt64();
          break;
        }
        case 16: {
          Killed = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          KilledBy = input.ReadUInt64();
          break;
        }
        case 16: {
          Killed = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// A position in the server game grid, the grid is a NxN square with (0,0) in the top left corner
///- x: X coordinate in the grid
///- y: Y coordinate in the grid
/// </summary>
public sealed partial class Position : pb::IMessage<Position>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Position> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Position() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Position(Position other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Position Clone() {
    return new Position(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private ulong x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private ulong y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Position);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Position other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0UL) hash ^= X.GetHashCode();
    if (Y != 0UL) hash ^= Y.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (X != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(X);
    }
    if (Y != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Y);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (X != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(X);
    }
    if (Y != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Y);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (X != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(X);
    }
    if (Y != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Y);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Position other) {
    if (other == null) {
      return;
    }
    if (other.X != 0UL) {
      X = other.X;
    }
    if (other.Y != 0UL) {
      Y = other.Y;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadUInt64();
          break;
        }
        case 16: {
          Y = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          X = input.ReadUInt64();
          break;
        }
        case 16: {
          Y = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// A relative position
///- x: X coordinate between -1 and 1
///- y: Y coordinate between -1 and 1
/// </summary>
public sealed partial class RelativePosition : pb::IMessage<RelativePosition>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<RelativePosition> _parser = new pb::MessageParser<RelativePosition>(() => new RelativePosition());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<RelativePosition> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RelativePosition() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RelativePosition(RelativePosition other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RelativePosition Clone() {
    return new RelativePosition(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private float x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private float y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as RelativePosition);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(RelativePosition other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
    if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (X != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (Y != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (X != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (Y != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (X != 0F) {
      size += 1 + 4;
    }
    if (Y != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(RelativePosition other) {
    if (other == null) {
      return;
    }
    if (other.X != 0F) {
      X = other.X;
    }
    if (other.Y != 0F) {
      Y = other.Y;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Represents any action that a client/player can make
///- action: the action taken by the player
///- direction: direction of the action (see Direction), used on actions MOVE, ATTACK
///- position: to decide aoe attack center
///- move_delta: movement direction
///- target: player id to autoattack
///- timestamp: client's time at the moment they send the action
/// </summary>
public sealed partial class ClientAction : pb::IMessage<ClientAction>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ClientAction> _parser = new pb::MessageParser<ClientAction>(() => new ClientAction());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<ClientAction> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ClientAction() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ClientAction(ClientAction other) : this() {
    action_ = other.action_;
    direction_ = other.direction_;
    position_ = other.position_ != null ? other.position_.Clone() : null;
    moveDelta_ = other.moveDelta_ != null ? other.moveDelta_.Clone() : null;
    target_ = other.target_;
    timestamp_ = other.timestamp_;
    playerCharacter_ = other.playerCharacter_ != null ? other.playerCharacter_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ClientAction Clone() {
    return new ClientAction(this);
  }

  /// <summary>Field number for the "action" field.</summary>
  public const int ActionFieldNumber = 1;
  private global::Action action_ = global::Action.Unspecified;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Action Action {
    get { return action_; }
    set {
      action_ = value;
    }
  }

  /// <summary>Field number for the "direction" field.</summary>
  public const int DirectionFieldNumber = 2;
  private global::Direction direction_ = global::Direction.Unspecified;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Direction Direction {
    get { return direction_; }
    set {
      direction_ = value;
    }
  }

  /// <summary>Field number for the "position" field.</summary>
  public const int PositionFieldNumber = 3;
  private global::RelativePosition position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::RelativePosition Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  /// <summary>Field number for the "move_delta" field.</summary>
  public const int MoveDeltaFieldNumber = 4;
  private global::RelativePosition moveDelta_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::RelativePosition MoveDelta {
    get { return moveDelta_; }
    set {
      moveDelta_ = value;
    }
  }

  /// <summary>Field number for the "target" field.</summary>
  public const int TargetFieldNumber = 5;
  private long target_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long Target {
    get { return target_; }
    set {
      target_ = value;
    }
  }

  /// <summary>Field number for the "timestamp" field.</summary>
  public const int TimestampFieldNumber = 6;
  private long timestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long Timestamp {
    get { return timestamp_; }
    set {
      timestamp_ = value;
    }
  }

  /// <summary>Field number for the "player_character" field.</summary>
  public const int PlayerCharacterFieldNumber = 7;
  private global::PlayerCharacter playerCharacter_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PlayerCharacter PlayerCharacter {
    get { return playerCharacter_; }
    set {
      playerCharacter_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as ClientAction);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(ClientAction other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Action != other.Action) return false;
    if (Direction != other.Direction) return false;
    if (!object.Equals(Position, other.Position)) return false;
    if (!object.Equals(MoveDelta, other.MoveDelta)) return false;
    if (Target != other.Target) return false;
    if (Timestamp != other.Timestamp) return false;
    if (!object.Equals(PlayerCharacter, other.PlayerCharacter)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Action != global::Action.Unspecified) hash ^= Action.GetHashCode();
    if (Direction != global::Direction.Unspecified) hash ^= Direction.GetHashCode();
    if (position_ != null) hash ^= Position.GetHashCode();
    if (moveDelta_ != null) hash ^= MoveDelta.GetHashCode();
    if (Target != 0L) hash ^= Target.GetHashCode();
    if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
    if (playerCharacter_ != null) hash ^= PlayerCharacter.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Action != global::Action.Unspecified) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Action);
    }
    if (Direction != global::Direction.Unspecified) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Direction);
    }
    if (position_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Position);
    }
    if (moveDelta_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(MoveDelta);
    }
    if (Target != 0L) {
      output.WriteRawTag(40);
      output.WriteSInt64(Target);
    }
    if (Timestamp != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(Timestamp);
    }
    if (playerCharacter_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(PlayerCharacter);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Action != global::Action.Unspecified) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Action);
    }
    if (Direction != global::Direction.Unspecified) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Direction);
    }
    if (position_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Position);
    }
    if (moveDelta_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(MoveDelta);
    }
    if (Target != 0L) {
      output.WriteRawTag(40);
      output.WriteSInt64(Target);
    }
    if (Timestamp != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(Timestamp);
    }
    if (playerCharacter_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(PlayerCharacter);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Action != global::Action.Unspecified) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
    }
    if (Direction != global::Direction.Unspecified) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
    }
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (moveDelta_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoveDelta);
    }
    if (Target != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Target);
    }
    if (Timestamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
    }
    if (playerCharacter_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerCharacter);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(ClientAction other) {
    if (other == null) {
      return;
    }
    if (other.Action != global::Action.Unspecified) {
      Action = other.Action;
    }
    if (other.Direction != global::Direction.Unspecified) {
      Direction = other.Direction;
    }
    if (other.position_ != null) {
      if (position_ == null) {
        Position = new global::RelativePosition();
      }
      Position.MergeFrom(other.Position);
    }
    if (other.moveDelta_ != null) {
      if (moveDelta_ == null) {
        MoveDelta = new global::RelativePosition();
      }
      MoveDelta.MergeFrom(other.MoveDelta);
    }
    if (other.Target != 0L) {
      Target = other.Target;
    }
    if (other.Timestamp != 0L) {
      Timestamp = other.Timestamp;
    }
    if (other.playerCharacter_ != null) {
      if (playerCharacter_ == null) {
        PlayerCharacter = new global::PlayerCharacter();
      }
      PlayerCharacter.MergeFrom(other.PlayerCharacter);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Action = (global::Action) input.ReadEnum();
          break;
        }
        case 16: {
          Direction = (global::Direction) input.ReadEnum();
          break;
        }
        case 26: {
          if (position_ == null) {
            Position = new global::RelativePosition();
          }
          input.ReadMessage(Position);
          break;
        }
        case 34: {
          if (moveDelta_ == null) {
            MoveDelta = new global::RelativePosition();
          }
          input.ReadMessage(MoveDelta);
          break;
        }
        case 40: {
          Target = input.ReadSInt64();
          break;
        }
        case 48: {
          Timestamp = input.ReadInt64();
          break;
        }
        case 58: {
          if (playerCharacter_ == null) {
            PlayerCharacter = new global::PlayerCharacter();
          }
          input.ReadMessage(PlayerCharacter);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Action = (global::Action) input.ReadEnum();
          break;
        }
        case 16: {
          Direction = (global::Direction) input.ReadEnum();
          break;
        }
        case 26: {
          if (position_ == null) {
            Position = new global::RelativePosition();
          }
          input.ReadMessage(Position);
          break;
        }
        case 34: {
          if (moveDelta_ == null) {
            MoveDelta = new global::RelativePosition();
          }
          input.ReadMessage(MoveDelta);
          break;
        }
        case 40: {
          Target = input.ReadSInt64();
          break;
        }
        case 48: {
          Timestamp = input.ReadInt64();
          break;
        }
        case 58: {
          if (playerCharacter_ == null) {
            PlayerCharacter = new global::PlayerCharacter();
          }
          input.ReadMessage(PlayerCharacter);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Represents the events happening in the matchmaking lobby, either from client or server
///- type: type of the event
///- lobby_id: ID of the matchmaking lobby, used on CONNECTED
///- player_id: ID assigned to the player (client) in the matchmaking lobby, used on CONNECTED
///- added_player_id: ID of any new player joining the lobby, used on PLAYER_ADDED
///- game_id: ID of the game session to join, used on GAME_STARTED
///- [DEPRECATED] player_count: Number of players in the matchmaking lobby, used on PLAYER_COUNT
///- players: List of players, used on PLAYER_ADDED
///- removed_player_id: ID of any player leaving the lobby, used on PLAYER_REMOVED
/// </summary>
public sealed partial class LobbyEvent : pb::IMessage<LobbyEvent>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<LobbyEvent> _parser = new pb::MessageParser<LobbyEvent>(() => new LobbyEvent());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<LobbyEvent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public LobbyEvent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public LobbyEvent(LobbyEvent other) : this() {
    type_ = other.type_;
    lobbyId_ = other.lobbyId_;
    playerId_ = other.playerId_;
    addedPlayerId_ = other.addedPlayerId_;
    gameId_ = other.gameId_;
    playerCount_ = other.playerCount_;
    players_ = other.players_.Clone();
    removedPlayerId_ = other.removedPlayerId_;
    gameConfig_ = other.gameConfig_ != null ? other.gameConfig_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public LobbyEvent Clone() {
    return new LobbyEvent(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::LobbyEventType type_ = global::LobbyEventType.TypeUnspecified;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::LobbyEventType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "lobby_id" field.</summary>
  public const int LobbyIdFieldNumber = 2;
  private string lobbyId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string LobbyId {
    get { return lobbyId_; }
    set {
      lobbyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "player_id" field.</summary>
  public const int PlayerIdFieldNumber = 3;
  private ulong playerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong PlayerId {
    get { return playerId_; }
    set {
      playerId_ = value;
    }
  }

  /// <summary>Field number for the "added_player_id" field.</summary>
  public const int AddedPlayerIdFieldNumber = 4;
  private ulong addedPlayerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong AddedPlayerId {
    get { return addedPlayerId_; }
    set {
      addedPlayerId_ = value;
    }
  }

  /// <summary>Field number for the "game_id" field.</summary>
  public const int GameIdFieldNumber = 5;
  private string gameId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string GameId {
    get { return gameId_; }
    set {
      gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "player_count" field.</summary>
  public const int PlayerCountFieldNumber = 6;
  private ulong playerCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong PlayerCount {
    get { return playerCount_; }
    set {
      playerCount_ = value;
    }
  }

  /// <summary>Field number for the "players" field.</summary>
  public const int PlayersFieldNumber = 7;
  private static readonly pb::FieldCodec<ulong> _repeated_players_codec
      = pb::FieldCodec.ForUInt64(58);
  private readonly pbc::RepeatedField<ulong> players_ = new pbc::RepeatedField<ulong>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<ulong> Players {
    get { return players_; }
  }

  /// <summary>Field number for the "removed_player_id" field.</summary>
  public const int RemovedPlayerIdFieldNumber = 8;
  private ulong removedPlayerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong RemovedPlayerId {
    get { return removedPlayerId_; }
    set {
      removedPlayerId_ = value;
    }
  }

  /// <summary>Field number for the "game_config" field.</summary>
  public const int GameConfigFieldNumber = 9;
  private global::ServerGameSettings gameConfig_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ServerGameSettings GameConfig {
    get { return gameConfig_; }
    set {
      gameConfig_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as LobbyEvent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(LobbyEvent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (LobbyId != other.LobbyId) return false;
    if (PlayerId != other.PlayerId) return false;
    if (AddedPlayerId != other.AddedPlayerId) return false;
    if (GameId != other.GameId) return false;
    if (PlayerCount != other.PlayerCount) return false;
    if(!players_.Equals(other.players_)) return false;
    if (RemovedPlayerId != other.RemovedPlayerId) return false;
    if (!object.Equals(GameConfig, other.GameConfig)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != global::LobbyEventType.TypeUnspecified) hash ^= Type.GetHashCode();
    if (LobbyId.Length != 0) hash ^= LobbyId.GetHashCode();
    if (PlayerId != 0UL) hash ^= PlayerId.GetHashCode();
    if (AddedPlayerId != 0UL) hash ^= AddedPlayerId.GetHashCode();
    if (GameId.Length != 0) hash ^= GameId.GetHashCode();
    if (PlayerCount != 0UL) hash ^= PlayerCount.GetHashCode();
    hash ^= players_.GetHashCode();
    if (RemovedPlayerId != 0UL) hash ^= RemovedPlayerId.GetHashCode();
    if (gameConfig_ != null) hash ^= GameConfig.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Type != global::LobbyEventType.TypeUnspecified) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (LobbyId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(LobbyId);
    }
    if (PlayerId != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(PlayerId);
    }
    if (AddedPlayerId != 0UL) {
      output.WriteRawTag(32);
      output.WriteUInt64(AddedPlayerId);
    }
    if (GameId.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(GameId);
    }
    if (PlayerCount != 0UL) {
      output.WriteRawTag(48);
      output.WriteUInt64(PlayerCount);
    }
    players_.WriteTo(output, _repeated_players_codec);
    if (RemovedPlayerId != 0UL) {
      output.WriteRawTag(64);
      output.WriteUInt64(RemovedPlayerId);
    }
    if (gameConfig_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(GameConfig);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Type != global::LobbyEventType.TypeUnspecified) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (LobbyId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(LobbyId);
    }
    if (PlayerId != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(PlayerId);
    }
    if (AddedPlayerId != 0UL) {
      output.WriteRawTag(32);
      output.WriteUInt64(AddedPlayerId);
    }
    if (GameId.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(GameId);
    }
    if (PlayerCount != 0UL) {
      output.WriteRawTag(48);
      output.WriteUInt64(PlayerCount);
    }
    players_.WriteTo(ref output, _repeated_players_codec);
    if (RemovedPlayerId != 0UL) {
      output.WriteRawTag(64);
      output.WriteUInt64(RemovedPlayerId);
    }
    if (gameConfig_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(GameConfig);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Type != global::LobbyEventType.TypeUnspecified) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (LobbyId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LobbyId);
    }
    if (PlayerId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerId);
    }
    if (AddedPlayerId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AddedPlayerId);
    }
    if (GameId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
    }
    if (PlayerCount != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerCount);
    }
    size += players_.CalculateSize(_repeated_players_codec);
    if (RemovedPlayerId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RemovedPlayerId);
    }
    if (gameConfig_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameConfig);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(LobbyEvent other) {
    if (other == null) {
      return;
    }
    if (other.Type != global::LobbyEventType.TypeUnspecified) {
      Type = other.Type;
    }
    if (other.LobbyId.Length != 0) {
      LobbyId = other.LobbyId;
    }
    if (other.PlayerId != 0UL) {
      PlayerId = other.PlayerId;
    }
    if (other.AddedPlayerId != 0UL) {
      AddedPlayerId = other.AddedPlayerId;
    }
    if (other.GameId.Length != 0) {
      GameId = other.GameId;
    }
    if (other.PlayerCount != 0UL) {
      PlayerCount = other.PlayerCount;
    }
    players_.Add(other.players_);
    if (other.RemovedPlayerId != 0UL) {
      RemovedPlayerId = other.RemovedPlayerId;
    }
    if (other.gameConfig_ != null) {
      if (gameConfig_ == null) {
        GameConfig = new global::ServerGameSettings();
      }
      GameConfig.MergeFrom(other.GameConfig);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Type = (global::LobbyEventType) input.ReadEnum();
          break;
        }
        case 18: {
          LobbyId = input.ReadString();
          break;
        }
        case 24: {
          PlayerId = input.ReadUInt64();
          break;
        }
        case 32: {
          AddedPlayerId = input.ReadUInt64();
          break;
        }
        case 42: {
          GameId = input.ReadString();
          break;
        }
        case 48: {
          PlayerCount = input.ReadUInt64();
          break;
        }
        case 58:
        case 56: {
          players_.AddEntriesFrom(input, _repeated_players_codec);
          break;
        }
        case 64: {
          RemovedPlayerId = input.ReadUInt64();
          break;
        }
        case 74: {
          if (gameConfig_ == null) {
            GameConfig = new global::ServerGameSettings();
          }
          input.ReadMessage(GameConfig);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Type = (global::LobbyEventType) input.ReadEnum();
          break;
        }
        case 18: {
          LobbyId = input.ReadString();
          break;
        }
        case 24: {
          PlayerId = input.ReadUInt64();
          break;
        }
        case 32: {
          AddedPlayerId = input.ReadUInt64();
          break;
        }
        case 42: {
          GameId = input.ReadString();
          break;
        }
        case 48: {
          PlayerCount = input.ReadUInt64();
          break;
        }
        case 58:
        case 56: {
          players_.AddEntriesFrom(ref input, _repeated_players_codec);
          break;
        }
        case 64: {
          RemovedPlayerId = input.ReadUInt64();
          break;
        }
        case 74: {
          if (gameConfig_ == null) {
            GameConfig = new global::ServerGameSettings();
          }
          input.ReadMessage(GameConfig);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class RunnerConfig : pb::IMessage<RunnerConfig>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<RunnerConfig> _parser = new pb::MessageParser<RunnerConfig>(() => new RunnerConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<RunnerConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RunnerConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RunnerConfig(RunnerConfig other) : this() {
    name_ = other.name_;
    boardWidth_ = other.boardWidth_;
    boardHeight_ = other.boardHeight_;
    serverTickrateMs_ = other.serverTickrateMs_;
    gameTimeoutMs_ = other.gameTimeoutMs_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RunnerConfig Clone() {
    return new RunnerConfig(this);
  }

  /// <summary>Field number for the "Name" field.</summary>
  public const int NameFieldNumber = 1;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "board_width" field.</summary>
  public const int BoardWidthFieldNumber = 2;
  private ulong boardWidth_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong BoardWidth {
    get { return boardWidth_; }
    set {
      boardWidth_ = value;
    }
  }

  /// <summary>Field number for the "board_height" field.</summary>
  public const int BoardHeightFieldNumber = 3;
  private ulong boardHeight_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong BoardHeight {
    get { return boardHeight_; }
    set {
      boardHeight_ = value;
    }
  }

  /// <summary>Field number for the "server_tickrate_ms" field.</summary>
  public const int ServerTickrateMsFieldNumber = 4;
  private ulong serverTickrateMs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ServerTickrateMs {
    get { return serverTickrateMs_; }
    set {
      serverTickrateMs_ = value;
    }
  }

  /// <summary>Field number for the "game_timeout_ms" field.</summary>
  public const int GameTimeoutMsFieldNumber = 5;
  private ulong gameTimeoutMs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong GameTimeoutMs {
    get { return gameTimeoutMs_; }
    set {
      gameTimeoutMs_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as RunnerConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(RunnerConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (BoardWidth != other.BoardWidth) return false;
    if (BoardHeight != other.BoardHeight) return false;
    if (ServerTickrateMs != other.ServerTickrateMs) return false;
    if (GameTimeoutMs != other.GameTimeoutMs) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (BoardWidth != 0UL) hash ^= BoardWidth.GetHashCode();
    if (BoardHeight != 0UL) hash ^= BoardHeight.GetHashCode();
    if (ServerTickrateMs != 0UL) hash ^= ServerTickrateMs.GetHashCode();
    if (GameTimeoutMs != 0UL) hash ^= GameTimeoutMs.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (BoardWidth != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(BoardWidth);
    }
    if (BoardHeight != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(BoardHeight);
    }
    if (ServerTickrateMs != 0UL) {
      output.WriteRawTag(32);
      output.WriteUInt64(ServerTickrateMs);
    }
    if (GameTimeoutMs != 0UL) {
      output.WriteRawTag(40);
      output.WriteUInt64(GameTimeoutMs);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (BoardWidth != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(BoardWidth);
    }
    if (BoardHeight != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(BoardHeight);
    }
    if (ServerTickrateMs != 0UL) {
      output.WriteRawTag(32);
      output.WriteUInt64(ServerTickrateMs);
    }
    if (GameTimeoutMs != 0UL) {
      output.WriteRawTag(40);
      output.WriteUInt64(GameTimeoutMs);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (BoardWidth != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BoardWidth);
    }
    if (BoardHeight != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BoardHeight);
    }
    if (ServerTickrateMs != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ServerTickrateMs);
    }
    if (GameTimeoutMs != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameTimeoutMs);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(RunnerConfig other) {
    if (other == null) {
      return;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.BoardWidth != 0UL) {
      BoardWidth = other.BoardWidth;
    }
    if (other.BoardHeight != 0UL) {
      BoardHeight = other.BoardHeight;
    }
    if (other.ServerTickrateMs != 0UL) {
      ServerTickrateMs = other.ServerTickrateMs;
    }
    if (other.GameTimeoutMs != 0UL) {
      GameTimeoutMs = other.GameTimeoutMs;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 16: {
          BoardWidth = input.ReadUInt64();
          break;
        }
        case 24: {
          BoardHeight = input.ReadUInt64();
          break;
        }
        case 32: {
          ServerTickrateMs = input.ReadUInt64();
          break;
        }
        case 40: {
          GameTimeoutMs = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 16: {
          BoardWidth = input.ReadUInt64();
          break;
        }
        case 24: {
          BoardHeight = input.ReadUInt64();
          break;
        }
        case 32: {
          ServerTickrateMs = input.ReadUInt64();
          break;
        }
        case 40: {
          GameTimeoutMs = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class GameConfig : pb::IMessage<GameConfig>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<GameConfig> _parser = new pb::MessageParser<GameConfig>(() => new GameConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<GameConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameConfig(GameConfig other) : this() {
    boardSize_ = other.boardSize_ != null ? other.boardSize_.Clone() : null;
    serverTickrateMs_ = other.serverTickrateMs_;
    gameTimeoutMs_ = other.gameTimeoutMs_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameConfig Clone() {
    return new GameConfig(this);
  }

  /// <summary>Field number for the "board_size" field.</summary>
  public const int BoardSizeFieldNumber = 1;
  private global::BoardSize boardSize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::BoardSize BoardSize {
    get { return boardSize_; }
    set {
      boardSize_ = value;
    }
  }

  /// <summary>Field number for the "server_tickrate_ms" field.</summary>
  public const int ServerTickrateMsFieldNumber = 2;
  private ulong serverTickrateMs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ServerTickrateMs {
    get { return serverTickrateMs_; }
    set {
      serverTickrateMs_ = value;
    }
  }

  /// <summary>Field number for the "game_timeout_ms" field.</summary>
  public const int GameTimeoutMsFieldNumber = 3;
  private ulong gameTimeoutMs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong GameTimeoutMs {
    get { return gameTimeoutMs_; }
    set {
      gameTimeoutMs_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as GameConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(GameConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(BoardSize, other.BoardSize)) return false;
    if (ServerTickrateMs != other.ServerTickrateMs) return false;
    if (GameTimeoutMs != other.GameTimeoutMs) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (boardSize_ != null) hash ^= BoardSize.GetHashCode();
    if (ServerTickrateMs != 0UL) hash ^= ServerTickrateMs.GetHashCode();
    if (GameTimeoutMs != 0UL) hash ^= GameTimeoutMs.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (boardSize_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(BoardSize);
    }
    if (ServerTickrateMs != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(ServerTickrateMs);
    }
    if (GameTimeoutMs != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(GameTimeoutMs);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (boardSize_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(BoardSize);
    }
    if (ServerTickrateMs != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(ServerTickrateMs);
    }
    if (GameTimeoutMs != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(GameTimeoutMs);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (boardSize_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(BoardSize);
    }
    if (ServerTickrateMs != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ServerTickrateMs);
    }
    if (GameTimeoutMs != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameTimeoutMs);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(GameConfig other) {
    if (other == null) {
      return;
    }
    if (other.boardSize_ != null) {
      if (boardSize_ == null) {
        BoardSize = new global::BoardSize();
      }
      BoardSize.MergeFrom(other.BoardSize);
    }
    if (other.ServerTickrateMs != 0UL) {
      ServerTickrateMs = other.ServerTickrateMs;
    }
    if (other.GameTimeoutMs != 0UL) {
      GameTimeoutMs = other.GameTimeoutMs;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (boardSize_ == null) {
            BoardSize = new global::BoardSize();
          }
          input.ReadMessage(BoardSize);
          break;
        }
        case 16: {
          ServerTickrateMs = input.ReadUInt64();
          break;
        }
        case 24: {
          GameTimeoutMs = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (boardSize_ == null) {
            BoardSize = new global::BoardSize();
          }
          input.ReadMessage(BoardSize);
          break;
        }
        case 16: {
          ServerTickrateMs = input.ReadUInt64();
          break;
        }
        case 24: {
          GameTimeoutMs = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class BoardSize : pb::IMessage<BoardSize>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<BoardSize> _parser = new pb::MessageParser<BoardSize>(() => new BoardSize());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<BoardSize> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BoardSize() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BoardSize(BoardSize other) : this() {
    width_ = other.width_;
    height_ = other.height_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BoardSize Clone() {
    return new BoardSize(this);
  }

  /// <summary>Field number for the "width" field.</summary>
  public const int WidthFieldNumber = 1;
  private ulong width_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Width {
    get { return width_; }
    set {
      width_ = value;
    }
  }

  /// <summary>Field number for the "height" field.</summary>
  public const int HeightFieldNumber = 2;
  private ulong height_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Height {
    get { return height_; }
    set {
      height_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as BoardSize);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(BoardSize other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Width != other.Width) return false;
    if (Height != other.Height) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Width != 0UL) hash ^= Width.GetHashCode();
    if (Height != 0UL) hash ^= Height.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Width != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(Width);
    }
    if (Height != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Height);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Width != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(Width);
    }
    if (Height != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Height);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Width != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Width);
    }
    if (Height != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Height);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(BoardSize other) {
    if (other == null) {
      return;
    }
    if (other.Width != 0UL) {
      Width = other.Width;
    }
    if (other.Height != 0UL) {
      Height = other.Height;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Width = input.ReadUInt64();
          break;
        }
        case 16: {
          Height = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Width = input.ReadUInt64();
          break;
        }
        case 16: {
          Height = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CharacterConfigItem : pb::IMessage<CharacterConfigItem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CharacterConfigItem> _parser = new pb::MessageParser<CharacterConfigItem>(() => new CharacterConfigItem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CharacterConfigItem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CharacterConfigItem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CharacterConfigItem(CharacterConfigItem other) : this() {
    name_ = other.name_;
    id_ = other.id_;
    active_ = other.active_;
    class_ = other.class_;
    faction_ = other.faction_;
    baseSpeed_ = other.baseSpeed_;
    skillBasic_ = other.skillBasic_;
    skillActive1_ = other.skillActive1_;
    skillActive2_ = other.skillActive2_;
    skillDash_ = other.skillDash_;
    skillUltimate_ = other.skillUltimate_;
    bodySize_ = other.bodySize_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CharacterConfigItem Clone() {
    return new CharacterConfigItem(this);
  }

  /// <summary>Field number for the "Name" field.</summary>
  public const int NameFieldNumber = 1;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Id" field.</summary>
  public const int IdFieldNumber = 2;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Active" field.</summary>
  public const int ActiveFieldNumber = 3;
  private string active_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Active {
    get { return active_; }
    set {
      active_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Class" field.</summary>
  public const int ClassFieldNumber = 4;
  private string class_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Class {
    get { return class_; }
    set {
      class_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Faction" field.</summary>
  public const int FactionFieldNumber = 5;
  private string faction_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Faction {
    get { return faction_; }
    set {
      faction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "BaseSpeed" field.</summary>
  public const int BaseSpeedFieldNumber = 6;
  private string baseSpeed_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string BaseSpeed {
    get { return baseSpeed_; }
    set {
      baseSpeed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "SkillBasic" field.</summary>
  public const int SkillBasicFieldNumber = 7;
  private string skillBasic_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SkillBasic {
    get { return skillBasic_; }
    set {
      skillBasic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "SkillActive1" field.</summary>
  public const int SkillActive1FieldNumber = 8;
  private string skillActive1_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SkillActive1 {
    get { return skillActive1_; }
    set {
      skillActive1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "SkillActive2" field.</summary>
  public const int SkillActive2FieldNumber = 9;
  private string skillActive2_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SkillActive2 {
    get { return skillActive2_; }
    set {
      skillActive2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "SkillDash" field.</summary>
  public const int SkillDashFieldNumber = 10;
  private string skillDash_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SkillDash {
    get { return skillDash_; }
    set {
      skillDash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "SkillUltimate" field.</summary>
  public const int SkillUltimateFieldNumber = 11;
  private string skillUltimate_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SkillUltimate {
    get { return skillUltimate_; }
    set {
      skillUltimate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "BodySize" field.</summary>
  public const int BodySizeFieldNumber = 12;
  private string bodySize_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string BodySize {
    get { return bodySize_; }
    set {
      bodySize_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CharacterConfigItem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CharacterConfigItem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (Id != other.Id) return false;
    if (Active != other.Active) return false;
    if (Class != other.Class) return false;
    if (Faction != other.Faction) return false;
    if (BaseSpeed != other.BaseSpeed) return false;
    if (SkillBasic != other.SkillBasic) return false;
    if (SkillActive1 != other.SkillActive1) return false;
    if (SkillActive2 != other.SkillActive2) return false;
    if (SkillDash != other.SkillDash) return false;
    if (SkillUltimate != other.SkillUltimate) return false;
    if (BodySize != other.BodySize) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (Active.Length != 0) hash ^= Active.GetHashCode();
    if (Class.Length != 0) hash ^= Class.GetHashCode();
    if (Faction.Length != 0) hash ^= Faction.GetHashCode();
    if (BaseSpeed.Length != 0) hash ^= BaseSpeed.GetHashCode();
    if (SkillBasic.Length != 0) hash ^= SkillBasic.GetHashCode();
    if (SkillActive1.Length != 0) hash ^= SkillActive1.GetHashCode();
    if (SkillActive2.Length != 0) hash ^= SkillActive2.GetHashCode();
    if (SkillDash.Length != 0) hash ^= SkillDash.GetHashCode();
    if (SkillUltimate.Length != 0) hash ^= SkillUltimate.GetHashCode();
    if (BodySize.Length != 0) hash ^= BodySize.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (Id.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Id);
    }
    if (Active.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Active);
    }
    if (Class.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Class);
    }
    if (Faction.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Faction);
    }
    if (BaseSpeed.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(BaseSpeed);
    }
    if (SkillBasic.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(SkillBasic);
    }
    if (SkillActive1.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(SkillActive1);
    }
    if (SkillActive2.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(SkillActive2);
    }
    if (SkillDash.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(SkillDash);
    }
    if (SkillUltimate.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(SkillUltimate);
    }
    if (BodySize.Length != 0) {
      output.WriteRawTag(98);
      output.WriteString(BodySize);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (Id.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Id);
    }
    if (Active.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Active);
    }
    if (Class.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Class);
    }
    if (Faction.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Faction);
    }
    if (BaseSpeed.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(BaseSpeed);
    }
    if (SkillBasic.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(SkillBasic);
    }
    if (SkillActive1.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(SkillActive1);
    }
    if (SkillActive2.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(SkillActive2);
    }
    if (SkillDash.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(SkillDash);
    }
    if (SkillUltimate.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(SkillUltimate);
    }
    if (BodySize.Length != 0) {
      output.WriteRawTag(98);
      output.WriteString(BodySize);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (Active.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Active);
    }
    if (Class.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Class);
    }
    if (Faction.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Faction);
    }
    if (BaseSpeed.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseSpeed);
    }
    if (SkillBasic.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SkillBasic);
    }
    if (SkillActive1.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SkillActive1);
    }
    if (SkillActive2.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SkillActive2);
    }
    if (SkillDash.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SkillDash);
    }
    if (SkillUltimate.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SkillUltimate);
    }
    if (BodySize.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(BodySize);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CharacterConfigItem other) {
    if (other == null) {
      return;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.Active.Length != 0) {
      Active = other.Active;
    }
    if (other.Class.Length != 0) {
      Class = other.Class;
    }
    if (other.Faction.Length != 0) {
      Faction = other.Faction;
    }
    if (other.BaseSpeed.Length != 0) {
      BaseSpeed = other.BaseSpeed;
    }
    if (other.SkillBasic.Length != 0) {
      SkillBasic = other.SkillBasic;
    }
    if (other.SkillActive1.Length != 0) {
      SkillActive1 = other.SkillActive1;
    }
    if (other.SkillActive2.Length != 0) {
      SkillActive2 = other.SkillActive2;
    }
    if (other.SkillDash.Length != 0) {
      SkillDash = other.SkillDash;
    }
    if (other.SkillUltimate.Length != 0) {
      SkillUltimate = other.SkillUltimate;
    }
    if (other.BodySize.Length != 0) {
      BodySize = other.BodySize;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          Id = input.ReadString();
          break;
        }
        case 26: {
          Active = input.ReadString();
          break;
        }
        case 34: {
          Class = input.ReadString();
          break;
        }
        case 42: {
          Faction = input.ReadString();
          break;
        }
        case 50: {
          BaseSpeed = input.ReadString();
          break;
        }
        case 58: {
          SkillBasic = input.ReadString();
          break;
        }
        case 66: {
          SkillActive1 = input.ReadString();
          break;
        }
        case 74: {
          SkillActive2 = input.ReadString();
          break;
        }
        case 82: {
          SkillDash = input.ReadString();
          break;
        }
        case 90: {
          SkillUltimate = input.ReadString();
          break;
        }
        case 98: {
          BodySize = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          Id = input.ReadString();
          break;
        }
        case 26: {
          Active = input.ReadString();
          break;
        }
        case 34: {
          Class = input.ReadString();
          break;
        }
        case 42: {
          Faction = input.ReadString();
          break;
        }
        case 50: {
          BaseSpeed = input.ReadString();
          break;
        }
        case 58: {
          SkillBasic = input.ReadString();
          break;
        }
        case 66: {
          SkillActive1 = input.ReadString();
          break;
        }
        case 74: {
          SkillActive2 = input.ReadString();
          break;
        }
        case 82: {
          SkillDash = input.ReadString();
          break;
        }
        case 90: {
          SkillUltimate = input.ReadString();
          break;
        }
        case 98: {
          BodySize = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CharacterConfig : pb::IMessage<CharacterConfig>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CharacterConfig> _parser = new pb::MessageParser<CharacterConfig>(() => new CharacterConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CharacterConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CharacterConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CharacterConfig(CharacterConfig other) : this() {
    items_ = other.items_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CharacterConfig Clone() {
    return new CharacterConfig(this);
  }

  /// <summary>Field number for the "Items" field.</summary>
  public const int ItemsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CharacterConfigItem> _repeated_items_codec
      = pb::FieldCodec.ForMessage(10, global::CharacterConfigItem.Parser);
  private readonly pbc::RepeatedField<global::CharacterConfigItem> items_ = new pbc::RepeatedField<global::CharacterConfigItem>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CharacterConfigItem> Items {
    get { return items_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CharacterConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CharacterConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!items_.Equals(other.items_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= items_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    items_.WriteTo(output, _repeated_items_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    items_.WriteTo(ref output, _repeated_items_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += items_.CalculateSize(_repeated_items_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CharacterConfig other) {
    if (other == null) {
      return;
    }
    items_.Add(other.items_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          items_.AddEntriesFrom(input, _repeated_items_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          items_.AddEntriesFrom(ref input, _repeated_items_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class SkillsConfig : pb::IMessage<SkillsConfig>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<SkillsConfig> _parser = new pb::MessageParser<SkillsConfig>(() => new SkillsConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<SkillsConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SkillsConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SkillsConfig(SkillsConfig other) : this() {
    items_ = other.items_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SkillsConfig Clone() {
    return new SkillsConfig(this);
  }

  /// <summary>Field number for the "Items" field.</summary>
  public const int ItemsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::SkillConfigItem> _repeated_items_codec
      = pb::FieldCodec.ForMessage(10, global::SkillConfigItem.Parser);
  private readonly pbc::RepeatedField<global::SkillConfigItem> items_ = new pbc::RepeatedField<global::SkillConfigItem>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::SkillConfigItem> Items {
    get { return items_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as SkillsConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(SkillsConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!items_.Equals(other.items_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= items_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    items_.WriteTo(output, _repeated_items_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    items_.WriteTo(ref output, _repeated_items_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += items_.CalculateSize(_repeated_items_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(SkillsConfig other) {
    if (other == null) {
      return;
    }
    items_.Add(other.items_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          items_.AddEntriesFrom(input, _repeated_items_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          items_.AddEntriesFrom(ref input, _repeated_items_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class SkillConfigItem : pb::IMessage<SkillConfigItem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<SkillConfigItem> _parser = new pb::MessageParser<SkillConfigItem>(() => new SkillConfigItem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<SkillConfigItem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SkillConfigItem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SkillConfigItem(SkillConfigItem other) : this() {
    name_ = other.name_;
    doFunc_ = other.doFunc_;
    buttonType_ = other.buttonType_;
    cooldown_ = other.cooldown_;
    damage_ = other.damage_;
    status_ = other.status_;
    duration_ = other.duration_;
    projectile_ = other.projectile_;
    minion_ = other.minion_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SkillConfigItem Clone() {
    return new SkillConfigItem(this);
  }

  /// <summary>Field number for the "Name" field.</summary>
  public const int NameFieldNumber = 1;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "DoFunc" field.</summary>
  public const int DoFuncFieldNumber = 2;
  private string doFunc_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string DoFunc {
    get { return doFunc_; }
    set {
      doFunc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ButtonType" field.</summary>
  public const int ButtonTypeFieldNumber = 3;
  private string buttonType_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ButtonType {
    get { return buttonType_; }
    set {
      buttonType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Cooldown" field.</summary>
  public const int CooldownFieldNumber = 4;
  private string cooldown_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Cooldown {
    get { return cooldown_; }
    set {
      cooldown_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Damage" field.</summary>
  public const int DamageFieldNumber = 5;
  private string damage_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Damage {
    get { return damage_; }
    set {
      damage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Status" field.</summary>
  public const int StatusFieldNumber = 6;
  private string status_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Status {
    get { return status_; }
    set {
      status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Duration" field.</summary>
  public const int DurationFieldNumber = 7;
  private string duration_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Duration {
    get { return duration_; }
    set {
      duration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Projectile" field.</summary>
  public const int ProjectileFieldNumber = 8;
  private string projectile_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Projectile {
    get { return projectile_; }
    set {
      projectile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Minion" field.</summary>
  public const int MinionFieldNumber = 9;
  private string minion_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Minion {
    get { return minion_; }
    set {
      minion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as SkillConfigItem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(SkillConfigItem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (DoFunc != other.DoFunc) return false;
    if (ButtonType != other.ButtonType) return false;
    if (Cooldown != other.Cooldown) return false;
    if (Damage != other.Damage) return false;
    if (Status != other.Status) return false;
    if (Duration != other.Duration) return false;
    if (Projectile != other.Projectile) return false;
    if (Minion != other.Minion) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (DoFunc.Length != 0) hash ^= DoFunc.GetHashCode();
    if (ButtonType.Length != 0) hash ^= ButtonType.GetHashCode();
    if (Cooldown.Length != 0) hash ^= Cooldown.GetHashCode();
    if (Damage.Length != 0) hash ^= Damage.GetHashCode();
    if (Status.Length != 0) hash ^= Status.GetHashCode();
    if (Duration.Length != 0) hash ^= Duration.GetHashCode();
    if (Projectile.Length != 0) hash ^= Projectile.GetHashCode();
    if (Minion.Length != 0) hash ^= Minion.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (DoFunc.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(DoFunc);
    }
    if (ButtonType.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ButtonType);
    }
    if (Cooldown.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Cooldown);
    }
    if (Damage.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Damage);
    }
    if (Status.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Status);
    }
    if (Duration.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(Duration);
    }
    if (Projectile.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(Projectile);
    }
    if (Minion.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(Minion);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (DoFunc.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(DoFunc);
    }
    if (ButtonType.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ButtonType);
    }
    if (Cooldown.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Cooldown);
    }
    if (Damage.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Damage);
    }
    if (Status.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Status);
    }
    if (Duration.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(Duration);
    }
    if (Projectile.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(Projectile);
    }
    if (Minion.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(Minion);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (DoFunc.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DoFunc);
    }
    if (ButtonType.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ButtonType);
    }
    if (Cooldown.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Cooldown);
    }
    if (Damage.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Damage);
    }
    if (Status.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
    }
    if (Duration.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Duration);
    }
    if (Projectile.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Projectile);
    }
    if (Minion.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Minion);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(SkillConfigItem other) {
    if (other == null) {
      return;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.DoFunc.Length != 0) {
      DoFunc = other.DoFunc;
    }
    if (other.ButtonType.Length != 0) {
      ButtonType = other.ButtonType;
    }
    if (other.Cooldown.Length != 0) {
      Cooldown = other.Cooldown;
    }
    if (other.Damage.Length != 0) {
      Damage = other.Damage;
    }
    if (other.Status.Length != 0) {
      Status = other.Status;
    }
    if (other.Duration.Length != 0) {
      Duration = other.Duration;
    }
    if (other.Projectile.Length != 0) {
      Projectile = other.Projectile;
    }
    if (other.Minion.Length != 0) {
      Minion = other.Minion;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          DoFunc = input.ReadString();
          break;
        }
        case 26: {
          ButtonType = input.ReadString();
          break;
        }
        case 34: {
          Cooldown = input.ReadString();
          break;
        }
        case 42: {
          Damage = input.ReadString();
          break;
        }
        case 50: {
          Status = input.ReadString();
          break;
        }
        case 58: {
          Duration = input.ReadString();
          break;
        }
        case 66: {
          Projectile = input.ReadString();
          break;
        }
        case 74: {
          Minion = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          DoFunc = input.ReadString();
          break;
        }
        case 26: {
          ButtonType = input.ReadString();
          break;
        }
        case 34: {
          Cooldown = input.ReadString();
          break;
        }
        case 42: {
          Damage = input.ReadString();
          break;
        }
        case 50: {
          Status = input.ReadString();
          break;
        }
        case 58: {
          Duration = input.ReadString();
          break;
        }
        case 66: {
          Projectile = input.ReadString();
          break;
        }
        case 74: {
          Minion = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ServerGameSettings : pb::IMessage<ServerGameSettings>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ServerGameSettings> _parser = new pb::MessageParser<ServerGameSettings>(() => new ServerGameSettings());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<ServerGameSettings> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ServerGameSettings() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ServerGameSettings(ServerGameSettings other) : this() {
    runnerConfig_ = other.runnerConfig_ != null ? other.runnerConfig_.Clone() : null;
    characterConfig_ = other.characterConfig_ != null ? other.characterConfig_.Clone() : null;
    skillsConfig_ = other.skillsConfig_ != null ? other.skillsConfig_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ServerGameSettings Clone() {
    return new ServerGameSettings(this);
  }

  /// <summary>Field number for the "runner_config" field.</summary>
  public const int RunnerConfigFieldNumber = 1;
  private global::RunnerConfig runnerConfig_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::RunnerConfig RunnerConfig {
    get { return runnerConfig_; }
    set {
      runnerConfig_ = value;
    }
  }

  /// <summary>Field number for the "character_config" field.</summary>
  public const int CharacterConfigFieldNumber = 2;
  private global::CharacterConfig characterConfig_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CharacterConfig CharacterConfig {
    get { return characterConfig_; }
    set {
      characterConfig_ = value;
    }
  }

  /// <summary>Field number for the "skills_config" field.</summary>
  public const int SkillsConfigFieldNumber = 3;
  private global::SkillsConfig skillsConfig_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::SkillsConfig SkillsConfig {
    get { return skillsConfig_; }
    set {
      skillsConfig_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as ServerGameSettings);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(ServerGameSettings other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(RunnerConfig, other.RunnerConfig)) return false;
    if (!object.Equals(CharacterConfig, other.CharacterConfig)) return false;
    if (!object.Equals(SkillsConfig, other.SkillsConfig)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (runnerConfig_ != null) hash ^= RunnerConfig.GetHashCode();
    if (characterConfig_ != null) hash ^= CharacterConfig.GetHashCode();
    if (skillsConfig_ != null) hash ^= SkillsConfig.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (runnerConfig_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(RunnerConfig);
    }
    if (characterConfig_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(CharacterConfig);
    }
    if (skillsConfig_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(SkillsConfig);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (runnerConfig_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(RunnerConfig);
    }
    if (characterConfig_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(CharacterConfig);
    }
    if (skillsConfig_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(SkillsConfig);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (runnerConfig_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RunnerConfig);
    }
    if (characterConfig_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CharacterConfig);
    }
    if (skillsConfig_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SkillsConfig);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(ServerGameSettings other) {
    if (other == null) {
      return;
    }
    if (other.runnerConfig_ != null) {
      if (runnerConfig_ == null) {
        RunnerConfig = new global::RunnerConfig();
      }
      RunnerConfig.MergeFrom(other.RunnerConfig);
    }
    if (other.characterConfig_ != null) {
      if (characterConfig_ == null) {
        CharacterConfig = new global::CharacterConfig();
      }
      CharacterConfig.MergeFrom(other.CharacterConfig);
    }
    if (other.skillsConfig_ != null) {
      if (skillsConfig_ == null) {
        SkillsConfig = new global::SkillsConfig();
      }
      SkillsConfig.MergeFrom(other.SkillsConfig);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (runnerConfig_ == null) {
            RunnerConfig = new global::RunnerConfig();
          }
          input.ReadMessage(RunnerConfig);
          break;
        }
        case 18: {
          if (characterConfig_ == null) {
            CharacterConfig = new global::CharacterConfig();
          }
          input.ReadMessage(CharacterConfig);
          break;
        }
        case 26: {
          if (skillsConfig_ == null) {
            SkillsConfig = new global::SkillsConfig();
          }
          input.ReadMessage(SkillsConfig);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (runnerConfig_ == null) {
            RunnerConfig = new global::RunnerConfig();
          }
          input.ReadMessage(RunnerConfig);
          break;
        }
        case 18: {
          if (characterConfig_ == null) {
            CharacterConfig = new global::CharacterConfig();
          }
          input.ReadMessage(CharacterConfig);
          break;
        }
        case 26: {
          if (skillsConfig_ == null) {
            SkillsConfig = new global::SkillsConfig();
          }
          input.ReadMessage(SkillsConfig);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///
///- position: Current projectile prosition
///- direction: Projectile direction
///- speed: Projectile speed
///- range: Attack range, with center in position
///- player_id: Player id who attacked
///- damage: Damage dealt on opponents when hit
///- remaining_ticks: Projectile remaining lifetime
///- type: Projectile type depending on the attack
/// </summary>
public sealed partial class Projectile : pb::IMessage<Projectile>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Projectile> _parser = new pb::MessageParser<Projectile>(() => new Projectile());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Projectile> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Projectile() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Projectile(Projectile other) : this() {
    id_ = other.id_;
    position_ = other.position_ != null ? other.position_.Clone() : null;
    direction_ = other.direction_ != null ? other.direction_.Clone() : null;
    speed_ = other.speed_;
    range_ = other.range_;
    playerId_ = other.playerId_;
    damage_ = other.damage_;
    remainingTicks_ = other.remainingTicks_;
    projectileType_ = other.projectileType_;
    status_ = other.status_;
    lastAttackedPlayerId_ = other.lastAttackedPlayerId_;
    pierce_ = other.pierce_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Projectile Clone() {
    return new Projectile(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private ulong id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "position" field.</summary>
  public const int PositionFieldNumber = 2;
  private global::Position position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Position Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  /// <summary>Field number for the "direction" field.</summary>
  public const int DirectionFieldNumber = 3;
  private global::RelativePosition direction_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::RelativePosition Direction {
    get { return direction_; }
    set {
      direction_ = value;
    }
  }

  /// <summary>Field number for the "speed" field.</summary>
  public const int SpeedFieldNumber = 4;
  private uint speed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Speed {
    get { return speed_; }
    set {
      speed_ = value;
    }
  }

  /// <summary>Field number for the "range" field.</summary>
  public const int RangeFieldNumber = 5;
  private uint range_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Range {
    get { return range_; }
    set {
      range_ = value;
    }
  }

  /// <summary>Field number for the "player_id" field.</summary>
  public const int PlayerIdFieldNumber = 6;
  private ulong playerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong PlayerId {
    get { return playerId_; }
    set {
      playerId_ = value;
    }
  }

  /// <summary>Field number for the "damage" field.</summary>
  public const int DamageFieldNumber = 7;
  private uint damage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Damage {
    get { return damage_; }
    set {
      damage_ = value;
    }
  }

  /// <summary>Field number for the "remaining_ticks" field.</summary>
  public const int RemainingTicksFieldNumber = 8;
  private long remainingTicks_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long RemainingTicks {
    get { return remainingTicks_; }
    set {
      remainingTicks_ = value;
    }
  }

  /// <summary>Field number for the "projectile_type" field.</summary>
  public const int ProjectileTypeFieldNumber = 9;
  private global::ProjectileType projectileType_ = global::ProjectileType.Bullet;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ProjectileType ProjectileType {
    get { return projectileType_; }
    set {
      projectileType_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 10;
  private global::ProjectileStatus status_ = global::ProjectileStatus.Active;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ProjectileStatus Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "last_attacked_player_id" field.</summary>
  public const int LastAttackedPlayerIdFieldNumber = 11;
  private ulong lastAttackedPlayerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong LastAttackedPlayerId {
    get { return lastAttackedPlayerId_; }
    set {
      lastAttackedPlayerId_ = value;
    }
  }

  /// <summary>Field number for the "pierce" field.</summary>
  public const int PierceFieldNumber = 12;
  private bool pierce_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Pierce {
    get { return pierce_; }
    set {
      pierce_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Projectile);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Projectile other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (!object.Equals(Position, other.Position)) return false;
    if (!object.Equals(Direction, other.Direction)) return false;
    if (Speed != other.Speed) return false;
    if (Range != other.Range) return false;
    if (PlayerId != other.PlayerId) return false;
    if (Damage != other.Damage) return false;
    if (RemainingTicks != other.RemainingTicks) return false;
    if (ProjectileType != other.ProjectileType) return false;
    if (Status != other.Status) return false;
    if (LastAttackedPlayerId != other.LastAttackedPlayerId) return false;
    if (Pierce != other.Pierce) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0UL) hash ^= Id.GetHashCode();
    if (position_ != null) hash ^= Position.GetHashCode();
    if (direction_ != null) hash ^= Direction.GetHashCode();
    if (Speed != 0) hash ^= Speed.GetHashCode();
    if (Range != 0) hash ^= Range.GetHashCode();
    if (PlayerId != 0UL) hash ^= PlayerId.GetHashCode();
    if (Damage != 0) hash ^= Damage.GetHashCode();
    if (RemainingTicks != 0L) hash ^= RemainingTicks.GetHashCode();
    if (ProjectileType != global::ProjectileType.Bullet) hash ^= ProjectileType.GetHashCode();
    if (Status != global::ProjectileStatus.Active) hash ^= Status.GetHashCode();
    if (LastAttackedPlayerId != 0UL) hash ^= LastAttackedPlayerId.GetHashCode();
    if (Pierce != false) hash ^= Pierce.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Id != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(Id);
    }
    if (position_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Position);
    }
    if (direction_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Direction);
    }
    if (Speed != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(Speed);
    }
    if (Range != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(Range);
    }
    if (PlayerId != 0UL) {
      output.WriteRawTag(48);
      output.WriteUInt64(PlayerId);
    }
    if (Damage != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(Damage);
    }
    if (RemainingTicks != 0L) {
      output.WriteRawTag(64);
      output.WriteSInt64(RemainingTicks);
    }
    if (ProjectileType != global::ProjectileType.Bullet) {
      output.WriteRawTag(72);
      output.WriteEnum((int) ProjectileType);
    }
    if (Status != global::ProjectileStatus.Active) {
      output.WriteRawTag(80);
      output.WriteEnum((int) Status);
    }
    if (LastAttackedPlayerId != 0UL) {
      output.WriteRawTag(88);
      output.WriteUInt64(LastAttackedPlayerId);
    }
    if (Pierce != false) {
      output.WriteRawTag(96);
      output.WriteBool(Pierce);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Id != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(Id);
    }
    if (position_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Position);
    }
    if (direction_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Direction);
    }
    if (Speed != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(Speed);
    }
    if (Range != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(Range);
    }
    if (PlayerId != 0UL) {
      output.WriteRawTag(48);
      output.WriteUInt64(PlayerId);
    }
    if (Damage != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(Damage);
    }
    if (RemainingTicks != 0L) {
      output.WriteRawTag(64);
      output.WriteSInt64(RemainingTicks);
    }
    if (ProjectileType != global::ProjectileType.Bullet) {
      output.WriteRawTag(72);
      output.WriteEnum((int) ProjectileType);
    }
    if (Status != global::ProjectileStatus.Active) {
      output.WriteRawTag(80);
      output.WriteEnum((int) Status);
    }
    if (LastAttackedPlayerId != 0UL) {
      output.WriteRawTag(88);
      output.WriteUInt64(LastAttackedPlayerId);
    }
    if (Pierce != false) {
      output.WriteRawTag(96);
      output.WriteBool(Pierce);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
    }
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (direction_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Direction);
    }
    if (Speed != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Speed);
    }
    if (Range != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Range);
    }
    if (PlayerId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerId);
    }
    if (Damage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Damage);
    }
    if (RemainingTicks != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeSInt64Size(RemainingTicks);
    }
    if (ProjectileType != global::ProjectileType.Bullet) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProjectileType);
    }
    if (Status != global::ProjectileStatus.Active) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    if (LastAttackedPlayerId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LastAttackedPlayerId);
    }
    if (Pierce != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Projectile other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0UL) {
      Id = other.Id;
    }
    if (other.position_ != null) {
      if (position_ == null) {
        Position = new global::Position();
      }
      Position.MergeFrom(other.Position);
    }
    if (other.direction_ != null) {
      if (direction_ == null) {
        Direction = new global::RelativePosition();
      }
      Direction.MergeFrom(other.Direction);
    }
    if (other.Speed != 0) {
      Speed = other.Speed;
    }
    if (other.Range != 0) {
      Range = other.Range;
    }
    if (other.PlayerId != 0UL) {
      PlayerId = other.PlayerId;
    }
    if (other.Damage != 0) {
      Damage = other.Damage;
    }
    if (other.RemainingTicks != 0L) {
      RemainingTicks = other.RemainingTicks;
    }
    if (other.ProjectileType != global::ProjectileType.Bullet) {
      ProjectileType = other.ProjectileType;
    }
    if (other.Status != global::ProjectileStatus.Active) {
      Status = other.Status;
    }
    if (other.LastAttackedPlayerId != 0UL) {
      LastAttackedPlayerId = other.LastAttackedPlayerId;
    }
    if (other.Pierce != false) {
      Pierce = other.Pierce;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadUInt64();
          break;
        }
        case 18: {
          if (position_ == null) {
            Position = new global::Position();
          }
          input.ReadMessage(Position);
          break;
        }
        case 26: {
          if (direction_ == null) {
            Direction = new global::RelativePosition();
          }
          input.ReadMessage(Direction);
          break;
        }
        case 32: {
          Speed = input.ReadUInt32();
          break;
        }
        case 40: {
          Range = input.ReadUInt32();
          break;
        }
        case 48: {
          PlayerId = input.ReadUInt64();
          break;
        }
        case 56: {
          Damage = input.ReadUInt32();
          break;
        }
        case 64: {
          RemainingTicks = input.ReadSInt64();
          break;
        }
        case 72: {
          ProjectileType = (global::ProjectileType) input.ReadEnum();
          break;
        }
        case 80: {
          Status = (global::ProjectileStatus) input.ReadEnum();
          break;
        }
        case 88: {
          LastAttackedPlayerId = input.ReadUInt64();
          break;
        }
        case 96: {
          Pierce = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Id = input.ReadUInt64();
          break;
        }
        case 18: {
          if (position_ == null) {
            Position = new global::Position();
          }
          input.ReadMessage(Position);
          break;
        }
        case 26: {
          if (direction_ == null) {
            Direction = new global::RelativePosition();
          }
          input.ReadMessage(Direction);
          break;
        }
        case 32: {
          Speed = input.ReadUInt32();
          break;
        }
        case 40: {
          Range = input.ReadUInt32();
          break;
        }
        case 48: {
          PlayerId = input.ReadUInt64();
          break;
        }
        case 56: {
          Damage = input.ReadUInt32();
          break;
        }
        case 64: {
          RemainingTicks = input.ReadSInt64();
          break;
        }
        case 72: {
          ProjectileType = (global::ProjectileType) input.ReadEnum();
          break;
        }
        case 80: {
          Status = (global::ProjectileStatus) input.ReadEnum();
          break;
        }
        case 88: {
          LastAttackedPlayerId = input.ReadUInt64();
          break;
        }
        case 96: {
          Pierce = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///
///- We divided the milliseconds time in two parts because
///- rustler can't handle u128, so instead of developing those functions
///- we decided to use 2 u64 fields to represent the time in milliseconds
///
///- If you need to use complete time in milliseconds, you should use both
///- If you need to use remaining time in milliseconds, you can use only low field
///- because high field will be 0
/// </summary>
public sealed partial class MillisTime : pb::IMessage<MillisTime>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MillisTime> _parser = new pb::MessageParser<MillisTime>(() => new MillisTime());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<MillisTime> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public MillisTime() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public MillisTime(MillisTime other) : this() {
    high_ = other.high_;
    low_ = other.low_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public MillisTime Clone() {
    return new MillisTime(this);
  }

  /// <summary>Field number for the "high" field.</summary>
  public const int HighFieldNumber = 1;
  private ulong high_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong High {
    get { return high_; }
    set {
      high_ = value;
    }
  }

  /// <summary>Field number for the "low" field.</summary>
  public const int LowFieldNumber = 2;
  private ulong low_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Low {
    get { return low_; }
    set {
      low_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as MillisTime);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(MillisTime other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (High != other.High) return false;
    if (Low != other.Low) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (High != 0UL) hash ^= High.GetHashCode();
    if (Low != 0UL) hash ^= Low.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (High != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(High);
    }
    if (Low != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Low);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (High != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(High);
    }
    if (Low != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Low);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (High != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(High);
    }
    if (Low != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Low);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(MillisTime other) {
    if (other == null) {
      return;
    }
    if (other.High != 0UL) {
      High = other.High;
    }
    if (other.Low != 0UL) {
      Low = other.Low;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          High = input.ReadUInt64();
          break;
        }
        case 16: {
          Low = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          High = input.ReadUInt64();
          break;
        }
        case 16: {
          Low = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
